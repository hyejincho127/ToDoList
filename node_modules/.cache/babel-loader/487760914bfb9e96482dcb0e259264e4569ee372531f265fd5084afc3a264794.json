{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  task,\n  toggleComplete,\n  deleteTodo,\n  editTodo\n}) => {\n  // const [isModalOpen, isModalClose] = useState({})\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: () => toggleComplete(task.id),\n      className: `${task.completed ? 'isCompleted' : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${task.completed ? 'isCompleted' : \"\"}`,\n      children: task.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPen,\n          onClick: () => editTodo(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrashCan,\n          onClick: () => deleteTodo(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","axios","FontAwesomeIcon","faPen","faTrashCan","jsxDEV","_jsxDEV","Todo","task","toggleComplete","deleteTodo","editTodo","className","children","type","onClick","id","completed","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nexport const Todo = ({task, toggleComplete, deleteTodo, editTodo}) => {\n    // const [isModalOpen, isModalClose] = useState({})\n    return (\n        <div className=\"Todo\">\n                <input type=\"checkbox\" onClick={() => toggleComplete(task.id)} className={`${task.completed ? 'isCompleted' : \"\"}`} />\n                <p className={`${task.completed ? 'isCompleted' : \"\"}`}>{task.task}</p> \n                <div>\n                    <button type=\"button\">\n                        <FontAwesomeIcon icon={faPen} onClick={() => editTodo(task.id)}/>\n                    </button>\n                    <button type=\"button\">\n                        <FontAwesomeIcon icon={faTrashCan} onClick={() => deleteTodo(task.id)} />\n                    </button>                           \n                </div>                    \n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,KAAK,EAAEC,UAAU,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtE,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAQ,CAAC,KAAK;EAClE;EACA,oBACIL,OAAA;IAAKM,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACbP,OAAA;MAAOQ,IAAI,EAAC,UAAU;MAACC,OAAO,EAAEA,CAAA,KAAMN,cAAc,CAACD,IAAI,CAACQ,EAAE,CAAE;MAACJ,SAAS,EAAG,GAAEJ,IAAI,CAACS,SAAS,GAAG,aAAa,GAAG,EAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtHf,OAAA;MAAGM,SAAS,EAAG,GAAEJ,IAAI,CAACS,SAAS,GAAG,aAAa,GAAG,EAAG,EAAE;MAAAJ,QAAA,EAAEL,IAAI,CAACA;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvEf,OAAA;MAAAO,QAAA,gBACIP,OAAA;QAAQQ,IAAI,EAAC,QAAQ;QAAAD,QAAA,eACjBP,OAAA,CAACJ,eAAe;UAACoB,IAAI,EAAEnB,KAAM;UAACY,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAACH,IAAI,CAACQ,EAAE;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACTf,OAAA;QAAQQ,IAAI,EAAC,QAAQ;QAAAD,QAAA,eACjBP,OAAA,CAACJ,eAAe;UAACoB,IAAI,EAAElB,UAAW;UAACW,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACF,IAAI,CAACQ,EAAE;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAAE,EAAA,GAhBYhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}