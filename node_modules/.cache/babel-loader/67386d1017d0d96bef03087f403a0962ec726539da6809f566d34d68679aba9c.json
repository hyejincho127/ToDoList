{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { Search } from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // 할 일을 서버에서 가져오는 함수\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/tasks');\n      const tasks = response.data;\n      setTodos(tasks);\n      filterTasks(tasks, selectedCategory, searchTerm);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const addTodo = async todo => {\n    try {\n      const response = await axios.post('http://localhost:3001/tasks', {\n        task: todo,\n        category: 'all',\n        completed: false,\n        isEditing: false\n      });\n      const newTodos = [...todos, response.data];\n      // setTodos([...todos, response.data]);\n      setTodos(newTodos);\n      setFilteredTasks(newTodos);\n      filterTasks(newTodos, selectedCategory, searchTerm);\n      console.log('New task added:', response.data);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/tasks/${id}`);\n      const updatedTodos = todos.filter(todo => todo.id !== id);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory, searchTerm);\n      console.log('Task deleted:', id);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const toggleComplete = async id => {\n    try {\n      const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        completed: !updatedTodo.completed\n      };\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory, searchTerm);\n      console.log(\"Task complete status updated:\", id);\n    } catch (error) {\n      console.error('Error updating task complete status:', error);\n    }\n  };\n  const editTodo = async (id, updatedTask) => {\n    try {\n      // const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        task: updatedTask,\n        isEditing: false\n      };\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      // const updatedTodos = todos.map(todo =>\n      //     todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n      // );\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        task: updatedTask\n      } : todo);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory, searchTerm);\n      console.log(\"Task is updated:\", id);\n    } catch (error) {\n      console.error('Error updating task', error);\n    }\n  };\n\n  // const filterTasks = (tasks, category, searchTerm) => {\n  //     let filtered = tasks;\n  //     if(category !== 'all') {\n  //         setFilteredTasks(tasks);\n  //     } else {\n  //         const filtered = tasks.filter(todo => todo.category === category);\n  //         setFilteredTasks(filtered)\n  //     }\n  // }\n\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n    filterTasks(todos, category);\n  };\n\n  // useEffect(() => {\n  //     fetchTasks();\n  // }, [addTodo, filterTasks]); \n\n  const handleSearch = searchTerm => {\n    if (!searchTerm.trim() === '') {\n      setFilteredTasks(todos);\n    } else {\n      const filtered = todos.filter(todo => todo.task.toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredTasks(filtered);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [todos]);\n  // addTodo={addTodo} \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo,\n      selectedCategory: selectedCategory,\n      handleCategoryChange: handleCategoryChange,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n      task: task,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoWrapper, \"DuFzJBR/4qJNrRBtMZI2KsPJwjo=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","axios","Todo","TodoForm","Search","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","filteredTasks","setFilteredTasks","selectedCategory","setSelectedCategory","searchTerm","setSearchTerm","fetchTasks","response","get","tasks","data","filterTasks","error","console","addTodo","todo","post","task","category","completed","isEditing","newTodos","log","deleteTodo","id","delete","updatedTodos","filter","toggleComplete","updatedTodo","find","updatedData","patch","map","editTodo","updatedTask","handleCategoryChange","handleSearch","trim","filtered","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { Search } from './Search'\n\nexport const TodoWrapper = () => {\n    const [todos, setTodos] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([])\n    const [selectedCategory, setSelectedCategory] = useState('all');\n    const [searchTerm, setSearchTerm] = useState('')\n\n    // 할 일을 서버에서 가져오는 함수\n    const fetchTasks = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/tasks');\n            const tasks = response.data;\n            setTodos(tasks);\n            filterTasks(tasks, selectedCategory, searchTerm);\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    };\n\n\n    const addTodo = async (todo) => {\n        try {\n            const response = await axios.post('http://localhost:3001/tasks', {\n                task: todo,\n                category: 'all',\n                completed: false,\n                isEditing: false\n            });\n            const newTodos = [...todos, response.data];\n            // setTodos([...todos, response.data]);\n            setTodos(newTodos)\n            setFilteredTasks(newTodos)\n            filterTasks(newTodos, selectedCategory, searchTerm)\n            console.log('New task added:', response.data);\n        } catch (error) {\n            console.error('Error adding task:', error);\n        }\n    };\n\n    const deleteTodo = async (id) => {\n        try {\n            await axios.delete(`http://localhost:3001/tasks/${id}`);\n            const updatedTodos = todos.filter(todo => todo.id !== id);\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory, searchTerm);\n            console.log('Task deleted:', id);\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const toggleComplete = async (id) => {\n        try {\n            const updatedTodo = todos.find(todo => todo.id === id);\n            const updatedData = { completed: !updatedTodo.completed };\n            await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n            const updatedTodos = todos.map(todo =>\n                todo.id === id ? { ...todo, completed: !todo.completed } : todo\n            );\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory, searchTerm);\n            console.log(\"Task complete status updated:\", id);\n        } catch (error) {\n            console.error('Error updating task complete status:', error);\n        }\n    };\n\n    const editTodo = async (id, updatedTask) => {\n        try {\n            // const updatedTodo = todos.find(todo => todo.id === id);\n            const updatedData = { task: updatedTask, isEditing: false };\n            await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n            // const updatedTodos = todos.map(todo =>\n            //     todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n            // );\n            const updatedTodos = todos.map(todo =>\n                todo.id === id ? { ...todo, task: updatedTask } : todo\n            );\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory, searchTerm);\n            console.log(\"Task is updated:\", id);\n        } catch (error) {\n            console.error('Error updating task', error);\n        }\n    };\n\n    // const filterTasks = (tasks, category, searchTerm) => {\n    //     let filtered = tasks;\n    //     if(category !== 'all') {\n    //         setFilteredTasks(tasks);\n    //     } else {\n    //         const filtered = tasks.filter(todo => todo.category === category);\n    //         setFilteredTasks(filtered)\n    //     }\n    // }\n\n    const handleCategoryChange = (category) => {\n        setSelectedCategory(category);\n        filterTasks(todos, category);\n    };\n\n    // useEffect(() => {\n    //     fetchTasks();\n    // }, [addTodo, filterTasks]); \n\n    const handleSearch = (searchTerm) => {\n        if(!searchTerm.trim() === '') {\n            setFilteredTasks(todos);\n        } else {\n            const filtered = todos.filter((todo) => todo.task.toLowerCase().includes(searchTerm.toLowerCase()));\n            setFilteredTasks(filtered);\n        }\n    }\n    useEffect(() => {\n        fetchTasks();\n    }, [todos])\n// addTodo={addTodo} \n    return (\n        <div className=\"TodoWrapper\">\n            <h3 className=\"title\">To Do List</h3>\n            <TodoForm addTodo={addTodo} selectedCategory={selectedCategory} handleCategoryChange={handleCategoryChange} setSearchTerm={setSearchTerm} />\n            <Search handleSearch={handleSearch} />\n            {filteredTasks.map((task) => (\n                <Todo\n                    task={task}\n                    key={task.id}\n                    toggleComplete={toggleComplete}\n                    deleteTodo={deleteTodo}\n                    editTodo={editTodo}\n                />\n            ))}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}