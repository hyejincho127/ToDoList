{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Select, { components } from 'react-select';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { Search } from './Search';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FaCaretDown } from 'react-icons/fa';\nimport { TaskModal } from '../Task/TaskModal';\nimport { EditTaskModal } from '../Task/EditTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [selectedCompletion, setSelectedCompletion] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  const [isEditTaskModalOpen, setIsEditTaskModalOpen] = useState(false);\n  // const [activeFilter, setActiveFilter] = useState(true);\n\n  const completionOptions = [{\n    value: 'all',\n    label: 'All'\n  }, {\n    value: 'completed',\n    label: 'Completed'\n  }, {\n    value: 'incompleted',\n    label: 'Incompleted'\n  }];\n  const DropdownIndicator = props => {\n    return /*#__PURE__*/_jsxDEV(components.DropdownIndicator, {\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(FaCaretDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  };\n  const addTask = newTask => {\n    // setTodos([...todos, newTask])\n    setTodos(prevTodos => [...prevTodos, newTask]);\n  };\n  const addPriorityTask = async () => {};\n  useEffect(() => {\n    if (isTaskModalOpen && isEditTaskModalOpen) {\n      setIsEditTaskModalOpen(false);\n    }\n  }, [isTaskModalOpen]);\n  useEffect(() => {\n    if (isEditTaskModalOpen && isTaskModalOpen) {\n      setIsTaskModalOpen(false);\n    }\n  }, [isEditTaskModalOpen]);\n  const openTaskModal = () => {\n    setIsTaskModalOpen(true);\n    setIsEditTaskModalOpen(false);\n  };\n  const closeTaskModal = () => {\n    setIsTaskModalOpen(false);\n  };\n  const openEditTaskModal = () => {\n    setIsEditTaskModalOpen(true);\n  };\n  const closeEditTaskModal = () => {\n    setIsEditTaskModalOpen(false);\n  };\n\n  // 할 일을 서버에서 가져오는 함수\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/tasks');\n      const tasks = response.data;\n      console.log(tasks);\n      setTodos(tasks);\n      filterTasks(tasks, selectedCategory, selectedCompletion, searchTerm);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/tasks/${id}`);\n      const updatedTodos = todos.filter(todo => todo.id !== id);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory, selectedCompletion, searchTerm);\n      console.log('Task deleted:', id);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const toggleComplete = async id => {\n    try {\n      const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        isCompleted: !updatedTodo.isCompleted\n      };\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        isCompleted: !todo.isCompleted\n      } : todo);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory, selectedCompletion, searchTerm);\n      console.log(\"Task complete status updated:\", id);\n    } catch (error) {\n      console.error('Error updating task complete status:', error);\n    }\n  };\n  const editTodo = async (id, updatedTask) => {\n    try {\n      // const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        task: updatedTask,\n        isEditing: false\n      };\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      // const updatedTodos = todos.map(todo =>\n      //     todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n      // );\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        task: updatedTask\n      } : todo);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory, selectedCompletion, searchTerm);\n      console.log(\"Task is updated:\", id);\n    } catch (error) {\n      console.error('Error updating task', error);\n    }\n  };\n  const filterTasks = (tasks, category, completion, searchTerm) => {\n    let filtered = tasks;\n\n    // 카테고리 필터링\n    if (category !== 'all') {\n      filtered = filtered.filter(todo => todo.category === category);\n    }\n\n    // 할 일 완료 상태 필터링\n    if (completion !== 'all') {\n      filtered = filtered.filter(todo => completion === 'completed' ? todo.isCompleted : !todo.isCompleted);\n    }\n    ;\n\n    // 검색어 필터링\n    if (searchTerm.trim() !== '') {\n      filtered = filtered.filter(todo => todo.task.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    // 완료 된 할 일 항목 아래로 정렬\n    filtered = filtered.sort((a, b) => a.isCompleted - b.isCompleted);\n    setFilteredTasks(filtered);\n  };\n  const selectCustomStyles = {\n    control: (provided, state) => ({\n      ...provided,\n      backgroundColor: '#FFF',\n      // 셀렉트 박스 배경색\n      border: '1px solid #ccc',\n      height: '3.3vh',\n      fontSize: '0.9rem',\n      textAlign: 'center',\n      boxShadow: 'none'\n    }),\n    menu: (provided, state) => ({\n      ...provided,\n      backgroundColor: '#FFF' // 드롭다운 메뉴 배경색,\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      color: '#333',\n      // 옵션 텍스트 색상\n      padding: '0.7rem',\n      backgroundColor: state.isSelected ? '#f0f0f0' : '#FFF',\n      // 선택된 옵션과 호버된 옵션의 배경색,\n      '&:hover': {\n        backgroundColor: '#f0f0f0' // 옵션 호버 배경색\n      }\n    }),\n    dropdownIndicator: (provided, state) => ({\n      ...provided,\n      color: '#ccc' // 드롭다운 아이콘 색상,\n    })\n  };\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n    // setActiveFilter(category === 'incompleted');\n    filterTasks(todos, category, selectedCompletion, searchTerm);\n  };\n  const handleCompletionChange = completion => {\n    setSelectedCompletion(completion);\n    filterTasks(todos, selectedCategory, completion, searchTerm);\n  };\n  const handleSearch = term => {\n    setSearchTerm(term);\n    filterTasks(todos, selectedCategory, selectedCompletion, term);\n  };\n  const countCompletedTasks = todos => {\n    const completedTasks = todos.filter(task => task.isCompleted === true);\n    // console.log(completedTasks);\n    return completedTasks.length;\n  };\n  const countIncompleteTasks = todos => {\n    const incompleteTasks = todos.filter(task => task.isCompleted === false);\n    // console.log(incompleteTasks);\n    return incompleteTasks.length;\n  };\n  const completedCount = countCompletedTasks(todos);\n  const incompleteCount = countIncompleteTasks(todos);\n  console.log('Completed tasks:', completedCount);\n  console.log('Incomplete tasks:', incompleteCount);\n\n  // addTodo={addTodo} \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"categoryContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category-filter\",\n        value: \"priority\",\n        children: \"\\u2605\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category-filter\",\n        value: \"all\",\n        onClick: e => handleCategoryChange(e.target.value),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category-filter\",\n        value: \"daily\",\n        onClick: e => handleCategoryChange(e.target.value),\n        setSearchTerm: setSearchTerm,\n        children: \"Daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category-filter\",\n        value: \"work\",\n        onClick: e => handleCategoryChange(e.target.value),\n        children: \"Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category-filter\",\n        value: \"study\",\n        onClick: e => handleCategoryChange(e.target.value),\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category-filter\",\n        value: \"home\",\n        onClick: e => handleCategoryChange(e.target.value),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category-filter\",\n        value: \"health\",\n        onClick: e => handleCategoryChange(e.target.value),\n        children: \"Health\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"category-filter\",\n        value: \"fitness\",\n        onClick: e => handleCategoryChange(e.target.value),\n        children: \"Fitness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"titleContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: \"To Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"todo-btn\",\n          onClick: openTaskModal,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            size: \"2xl\",\n            style: {\n              color: \"#524444\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 88\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filterContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          handleSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"select-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            id: \"completedFilter\",\n            className: \"completed-filter\",\n            options: completionOptions,\n            value: completionOptions.find(option => option.value === selectedCompletion),\n            onChange: selectedOption => handleCompletionChange(selectedOption.value),\n            placeholder: selectedCompletion,\n            components: {\n              DropdownIndicator\n            },\n            styles: selectCustomStyles,\n            isSearchable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-value\",\n            children: selectedCompletion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"todoContainer\",\n        children: [filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n          task: task,\n          toggleComplete: toggleComplete,\n          deleteTodo: deleteTodo,\n          editTodo: editTodo,\n          searchTerm: searchTerm\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"taskCountBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"incompletedCount\",\n            children: [incompleteCount, \" tasks left\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"completedCount\",\n            children: [completedCount, \" tasks completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), isTaskModalOpen && /*#__PURE__*/_jsxDEV(TaskModal, {\n      addTask: addTask,\n      closeModal: closeTaskModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 33\n    }, this), isEditTaskModalOpen && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      addTask: addTask,\n      closeModal: closeEditTaskModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoWrapper, \"OU8nKUOaKB2+JjBfas5mW3DByCQ=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","axios","Select","components","Todo","TodoForm","Search","FontAwesomeIcon","faPlus","FaCaretDown","TaskModal","EditTaskModal","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","filteredTasks","setFilteredTasks","selectedCategory","setSelectedCategory","selectedCompletion","setSelectedCompletion","searchTerm","setSearchTerm","isTaskModalOpen","setIsTaskModalOpen","isEditTaskModalOpen","setIsEditTaskModalOpen","completionOptions","value","label","DropdownIndicator","props","children","fileName","_jsxFileName","lineNumber","columnNumber","addTask","newTask","prevTodos","addPriorityTask","openTaskModal","closeTaskModal","openEditTaskModal","closeEditTaskModal","fetchTasks","response","get","tasks","data","console","log","filterTasks","error","deleteTodo","id","delete","updatedTodos","filter","todo","toggleComplete","updatedTodo","find","updatedData","isCompleted","patch","map","editTodo","updatedTask","task","isEditing","category","completion","filtered","trim","toLowerCase","includes","sort","a","b","selectCustomStyles","control","provided","state","backgroundColor","border","height","fontSize","textAlign","boxShadow","menu","option","color","padding","isSelected","dropdownIndicator","handleCategoryChange","handleCompletionChange","handleSearch","term","countCompletedTasks","completedTasks","length","countIncompleteTasks","incompleteTasks","completedCount","incompleteCount","type","className","onClick","e","target","icon","size","style","class","options","onChange","selectedOption","placeholder","styles","isSearchable","closeModal","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Select, { components } from 'react-select';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { Search } from './Search';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FaCaretDown } from 'react-icons/fa'; \nimport { TaskModal } from '../Task/TaskModal';\nimport { EditTaskModal } from '../Task/EditTaskModal';\n\nexport const TodoWrapper = () => {\n    const [todos, setTodos] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('all');\n    const [selectedCompletion, setSelectedCompletion] = useState('all');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n    const [isEditTaskModalOpen, setIsEditTaskModalOpen] = useState(false);\n    // const [activeFilter, setActiveFilter] = useState(true);\n\n    const completionOptions = [\n        { value: 'all', label: 'All' },\n        { value: 'completed', label: 'Completed'},\n        { value: 'incompleted', label: 'Incompleted'},\n    ];\n\n    const DropdownIndicator = (props) => {\n        return ( \n            <components.DropdownIndicator {...props}>\n                <FaCaretDown />\n            </components.DropdownIndicator>\n        );\n    };\n\n    const addTask = (newTask) => {\n        // setTodos([...todos, newTask])\n        setTodos((prevTodos) => [...prevTodos, newTask]);\n    }\n\n    const addPriorityTask = async () => {\n        \n    }\n\n\n\n    useEffect(() => {\n        if (isTaskModalOpen && isEditTaskModalOpen) {\n            setIsEditTaskModalOpen(false);\n        }\n    }, [isTaskModalOpen]);\n\n    useEffect(() => {\n        if (isEditTaskModalOpen && isTaskModalOpen) {\n            setIsTaskModalOpen(false);\n        }\n    }, [isEditTaskModalOpen]);\n\n\n    const openTaskModal = () => {\n        setIsTaskModalOpen(true);\n        setIsEditTaskModalOpen(false);\n    };\n\n    const closeTaskModal = () => {\n        setIsTaskModalOpen(false);\n    };\n\n    const openEditTaskModal = () => {\n        setIsEditTaskModalOpen(true);\n    };\n\n    const closeEditTaskModal = () => {\n        setIsEditTaskModalOpen(false);\n    };\n\n    // 할 일을 서버에서 가져오는 함수\n    const fetchTasks = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/tasks');\n            const tasks = response.data;\n            console.log(tasks)\n            setTodos(tasks);\n            filterTasks(tasks, selectedCategory, selectedCompletion, searchTerm);\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n\n    const deleteTodo = async (id) => {\n        try {\n            await axios.delete(`http://localhost:3001/tasks/${id}`);\n            const updatedTodos = todos.filter(todo => todo.id !== id);\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory, selectedCompletion, searchTerm);\n            console.log('Task deleted:', id);\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const toggleComplete = async (id) => {\n        try {\n            const updatedTodo = todos.find(todo => todo.id === id);\n            const updatedData = { isCompleted: !updatedTodo.isCompleted };\n            await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n            const updatedTodos = todos.map(todo =>\n                todo.id === id ? { ...todo, isCompleted: !todo.isCompleted } : todo\n            );\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory, selectedCompletion, searchTerm);\n            console.log(\"Task complete status updated:\", id);\n        } catch (error) {\n            console.error('Error updating task complete status:', error);\n        }\n    };\n\n    const editTodo = async (id, updatedTask) => {\n        try {\n            // const updatedTodo = todos.find(todo => todo.id === id);\n            const updatedData = { task: updatedTask, isEditing: false };\n            await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n            // const updatedTodos = todos.map(todo =>\n            //     todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n            // );\n            const updatedTodos = todos.map(todo =>\n                todo.id === id ? { ...todo, task: updatedTask } : todo\n            );\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory, selectedCompletion, searchTerm);\n            console.log(\"Task is updated:\", id);\n        } catch (error) {\n            console.error('Error updating task', error);\n        }\n    };\n\n    const filterTasks = (tasks, category, completion, searchTerm) => {\n        let filtered = tasks;\n\n        // 카테고리 필터링\n        if (category !== 'all') {\n            filtered = filtered.filter((todo) => todo.category === category);          \n        }\n\n        // 할 일 완료 상태 필터링\n        if(completion !== 'all') {\n                filtered = filtered.filter((todo) => completion === 'completed' ? todo.isCompleted : !todo.isCompleted);\n        };\n\n        // 검색어 필터링\n        if (searchTerm.trim() !== '') {\n            filtered = filtered.filter((todo)=> todo.task.toLowerCase().includes(searchTerm.toLowerCase()));\n        }\n        // 완료 된 할 일 항목 아래로 정렬\n        filtered = filtered.sort((a,b) => a.isCompleted - b.isCompleted);\n\n        setFilteredTasks(filtered);\n    }\n\n    const selectCustomStyles = {\n        control: (provided, state) => ({\n          ...provided,\n          backgroundColor: '#FFF', // 셀렉트 박스 배경색\n          border: '1px solid #ccc',\n          height: '3.3vh',\n          fontSize: '0.9rem',\n          textAlign: 'center',\n          boxShadow: 'none',\n        }),\n        menu: (provided, state) => ({\n          ...provided,\n          backgroundColor: '#FFF' // 드롭다운 메뉴 배경색,\n        }),\n        option: (provided, state) => ({\n          ...provided,\n          color: '#333', // 옵션 텍스트 색상\n          padding: '0.7rem',\n          backgroundColor: state.isSelected ? '#f0f0f0' : '#FFF', // 선택된 옵션과 호버된 옵션의 배경색,\n          '&:hover': {\n            backgroundColor: '#f0f0f0' // 옵션 호버 배경색\n          }\n        }),\n        dropdownIndicator: (provided, state) => ({\n          ...provided,\n          color: '#ccc' // 드롭다운 아이콘 색상,\n        })\n    };\n\n    const handleCategoryChange = (category) => {\n        setSelectedCategory(category);\n        // setActiveFilter(category === 'incompleted');\n        filterTasks(todos, category, selectedCompletion, searchTerm);\n    };\n\n    const handleCompletionChange = (completion) => {\n        setSelectedCompletion(completion);\n        filterTasks(todos, selectedCategory, completion, searchTerm)\n    };\n\n    const handleSearch = (term) => {\n        setSearchTerm(term);\n        filterTasks(todos, selectedCategory, selectedCompletion, term);\n    };\n\n    const countCompletedTasks = (todos) => {\n        const completedTasks = todos.filter(task => task.isCompleted === true);\n        // console.log(completedTasks);\n        return completedTasks.length;\n    };\n    \n    const countIncompleteTasks = (todos) => {\n        const incompleteTasks = todos.filter(task => task.isCompleted === false);\n        // console.log(incompleteTasks);\n        return incompleteTasks.length;\n    };\n    \n    const completedCount = countCompletedTasks(todos);\n    const incompleteCount = countIncompleteTasks(todos);\n    \n    console.log('Completed tasks:', completedCount);\n    console.log('Incomplete tasks:', incompleteCount);\n    \n// addTodo={addTodo} \n    return (\n        <div id=\"todoContainer\">\n            <div id=\"categoryContainer\">\n                <button type=\"button\" className=\"category-filter\" value=\"priority\">★</button>\n                <button type=\"button\" className=\"category-filter\" value=\"all\" onClick={(e)=>handleCategoryChange(e.target.value)}>All</button>\n                <button type=\"button\" className=\"category-filter\" value=\"daily\" onClick={(e)=>handleCategoryChange(e.target.value)} setSearchTerm={setSearchTerm}>Daily</button>\n                <button type=\"button\" className=\"category-filter\" value=\"work\" onClick={(e)=>handleCategoryChange(e.target.value)}>Work</button>\n                <button type=\"button\" className=\"category-filter\" value=\"study\" onClick={(e)=>handleCategoryChange(e.target.value)}>Study</button>\n                <button type=\"button\" className=\"category-filter\" value=\"home\" onClick={(e)=>handleCategoryChange(e.target.value)}>Home</button>\n                <button type=\"button\" className=\"category-filter\" value=\"health\" onClick={(e)=>handleCategoryChange(e.target.value)}>Health</button>\n                <button type=\"button\" className=\"category-filter\" value=\"fitness\" onClick={(e)=>handleCategoryChange(e.target.value)}>Fitness</button>\n            </div>       \n            \n            <div className=\"TodoWrapper\">\n                <div id=\"titleContainer\">\n                    <h3 className=\"title\">To Do List</h3>\n                    <button type=\"button\" className=\"todo-btn\" onClick={openTaskModal}><FontAwesomeIcon icon={faPlus} size=\"2xl\" style={{color: \"#524444\"}} /></button>\n                </div>\n\n                {/* <div id=\"taskCountBox\">\n                    <p id=\"completdCount\">{completedCount} tasks done</p>\n                    <p id=\"incompletedCount\">{incompleteCount} tasks left</p>                \n                </div>   */}\n                <div id=\"filterContainer\">\n                    <Search handleSearch={handleSearch} />\n                    {/* <TodoForm selectedCategory={selectedCategory} handleCategoryChange={handleCategoryChange} setSearchTerm={setSearchTerm} className=\"category-filter\"/>   */}\n                    <div class=\"select-wrapper\"> \n                            <Select\n                                id=\"completedFilter\"\n                                className=\"completed-filter\"\n                                options={completionOptions}\n                                value={completionOptions.find(option => option.value === selectedCompletion)}\n                                onChange={(selectedOption) => handleCompletionChange(selectedOption.value)}\n                                placeholder={selectedCompletion}\n                                components={{\n                                    DropdownIndicator}} styles={selectCustomStyles}\n                                    isSearchable={false}  \n                            />\n                            <div className=\"selected-value\">{selectedCompletion}</div>\n                        {/* <select id=\"categoryFilter\" className=\"category-filter\" value={selectedCategory}  setSearchTerm={setSearchTerm} onChange={(e) => handleCategoryChange(e.target.value)} >\n                            <option value=\"all\">All</option>\n                            <option value=\"daily\">Daily</option>\n                            <option value=\"work\">Work</option>\n                            <option value=\"study\">Study</option>\n                            <option value=\"home\">Home</option>\n                            <option value=\"health\">Health</option>\n                            <option value=\"fitness\">Fitness</option>\n                            <option value=\"priority\">Priority</option>               \n                        </select>         */}\n                    </div>    \n                </div>\n            \n                <div id=\"todoContainer\">\n                    {filteredTasks.map((task) => (\n                        <Todo\n                            task={task}\n                            key={task.id}\n                            toggleComplete={toggleComplete}\n                            deleteTodo={deleteTodo}\n                            editTodo={editTodo}\n                            searchTerm={searchTerm}\n                        />\n                    ))}\n\n                <div id=\"taskCountBox\">\n                    <p id=\"incompletedCount\">{incompleteCount} tasks left</p>                \n                    <p id=\"completedCount\">{completedCount} tasks completed</p>\n                </div>   \n                </div>\n            </div>\n            {isTaskModalOpen && <TaskModal addTask={addTask} closeModal={closeTaskModal} />}\n            {isEditTaskModalOpen && <EditTaskModal addTask={addTask} closeModal={closeEditTaskModal} />}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}