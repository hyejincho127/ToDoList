{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  // 할 일을 서버에서 가져오는 함수\n  const fetchTasks = async () => {\n    try {\n      const updatedTasks = await axios.get('http://localhost:3001/tasks');\n      setTodos(updatedTasks.data);\n      FilterTasks(updatedTasks.data, selectedCategory);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [todos]);\n  const addTodo = async todo => {\n    try {\n      const response = await axios.post('http://localhost:3001/tasks', {\n        task: todo,\n        category: 'all',\n        completed: false,\n        isEditing: false\n      });\n      const newTodos = [...todos, response.data];\n      // setTodos([...todos, response.data]);\n      setTodos(newTodos);\n      filterTasks(newTodos, selectedCategory);\n      console.log('New task added:', response.data);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/tasks/${id}`);\n      const updatedTodos = todos.filter(todo => todo.id !== id);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory);\n      console.log('Task deleted:', id);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const toggleComplete = async id => {\n    try {\n      const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        completed: !updatedTodo.completed\n      };\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory);\n      console.log(\"Task complete status updated:\", id);\n    } catch (error) {\n      console.error('Error updating task complete status:', error);\n    }\n  };\n  const editTodo = async (id, updatedTask) => {\n    try {\n      const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        task: updatedTask,\n        isEditing: false\n      };\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        isEditing: !todo.isEditing\n      } : todo);\n      setTodos(updatedTodos);\n      filterTasks(updatedTodos, selectedCategory);\n      console.log(\"Task is updated:\", id);\n    } catch (error) {\n      console.error('Error updating task', error);\n    }\n  };\n  const filterTasks = category => {\n    if (category === 'all') {\n      setFilteredTasks(todos);\n    } else {\n      const filtered = todos.filter(todo => todo.category === category);\n      setFilteredTasks(filtered);\n    }\n  };\n  // addTodo={addTodo} \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      filterTasks: filterTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n      task: task,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoWrapper, \"wsPIC2SBAXI/LS71OYe4N0SZK3k=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","axios","Todo","TodoForm","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","filteredTasks","setFilteredTasks","selectedCategory","setSelectedCategory","fetchTasks","updatedTasks","get","data","FilterTasks","error","console","addTodo","todo","response","post","task","category","completed","isEditing","newTodos","filterTasks","log","deleteTodo","id","delete","updatedTodos","filter","toggleComplete","updatedTodo","find","updatedData","patch","map","editTodo","updatedTask","filtered","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\n\nexport const TodoWrapper = () => {\n    const [todos, setTodos] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([])\n    const [selectedCategory, setSelectedCategory] = useState('');\n\n    // 할 일을 서버에서 가져오는 함수\n    const fetchTasks = async () => {\n        try {\n            const updatedTasks = await axios.get('http://localhost:3001/tasks');\n            setTodos(updatedTasks.data);\n            FilterTasks(updatedTasks.data, selectedCategory);\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchTasks();\n    }, [todos]); \n\n    const addTodo = async todo => {\n        try {\n            const response = await axios.post('http://localhost:3001/tasks', {\n                task: todo,\n                category: 'all',\n                completed: false,\n                isEditing: false\n            });\n            const newTodos = [...todos, response.data];\n            // setTodos([...todos, response.data]);\n            setTodos(newTodos)\n            filterTasks(newTodos, selectedCategory)\n            console.log('New task added:', response.data);\n        } catch (error) {\n            console.error('Error adding task:', error);\n        }\n    };\n\n    const deleteTodo = async id => {\n        try {\n            await axios.delete(`http://localhost:3001/tasks/${id}`);\n            const updatedTodos = todos.filter(todo => todo.id !== id);\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory);\n            console.log('Task deleted:', id);\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const toggleComplete = async id => {\n        try {\n            const updatedTodo = todos.find(todo => todo.id === id);\n            const updatedData = { completed: !updatedTodo.completed };\n            await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n            const updatedTodos = todos.map(todo =>\n                todo.id === id ? { ...todo, completed: !todo.completed } : todo\n            );\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory);\n            console.log(\"Task complete status updated:\", id);\n        } catch (error) {\n            console.error('Error updating task complete status:', error);\n        }\n    };\n\n    const editTodo = async (id, updatedTask) => {\n        try {\n            const updatedTodo = todos.find(todo => todo.id === id);\n            const updatedData = { task: updatedTask, isEditing: false };\n            await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n            const updatedTodos = todos.map(todo =>\n                todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n            );\n            setTodos(updatedTodos);\n            filterTasks(updatedTodos, selectedCategory);\n            console.log(\"Task is updated:\", id);\n        } catch (error) {\n            console.error('Error updating task', error);\n        }\n    };\n\n    const filterTasks = (category) => {\n        if(category === 'all') {\n            setFilteredTasks(todos);\n        } else {\n            const filtered = todos.filter(todo => todo.category === category);\n            setFilteredTasks(filtered)\n        }\n    }\n// addTodo={addTodo} \n    return (\n        <div className=\"TodoWrapper\">\n            <h3 className=\"title\">To Do List</h3>\n            <TodoForm filterTasks={filterTasks}/>\n            {filteredTasks.map((task) => (\n                <Todo\n                    task={task}\n                    key={task.id}\n                    toggleComplete={toggleComplete}\n                    deleteTodo={deleteTodo}\n                    editTodo={editTodo}\n                />\n            ))}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}