{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan, faLink, faStar } from '@fortawesome/free-solid-svg-icons';\nimport { EditTaskModal } from '../Task/EditTaskModal';\nimport { TaskModal } from '../Task/TaskModal';\nimport { TodoWrapper } from './TodoWrapper';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  task,\n  toggleComplete,\n  deleteTodo,\n  searchTerm,\n  toggleImportance\n}) => {\n  _s();\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isTodoOpen, setIsTodoOpen] = useState(false);\n  const openEditModal = () => {\n    setIsEditModalOpen(true);\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n  };\n  const handleEditIconClick = () => {\n    openEditModal();\n  };\n  const handleToggleImportance = async id => {\n    try {\n      const updatedImportantStatus = !task.isImportant;\n      await axios.patch(`http://localhost:3001/tasks/${task.id}`, {\n        isImportant: updatedImportantStatus\n      });\n      toggleImportance(task.id, updatedImportantStatus);\n    } catch (error) {\n      console.error('Error toggling importance:', error);\n    }\n  };\n  const highlightSearchTerm = (text, searchTerm) => {\n    if (!searchTerm.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${searchTerm})`, 'gi');\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n  const toggleTodoOpen = () => {\n    setIsTodoOpen(!isTodoOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkContainer\",\n        onClick: toggleTodoOpen,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"checkbox\",\n              type: \"checkbox\",\n              onClick: e => {\n                e.stopPropagation();\n                toggleComplete(task.id);\n              },\n              className: `${task.isCompleted ? 'isCompleted' : ''}`,\n              checked: task.isCompleted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"checkmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"taskName\",\n              className: `${task.isCompleted ? 'isCompleted' : \"\"}`,\n              dangerouslySetInnerHTML: {\n                __html: highlightSearchTerm(task.task, searchTerm)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: task.isImportant ? 'important' : '',\n            onClick: () => handleToggleImportance(task.id),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faStar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"todo-category\",\n            children: task.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPen,\n              onClick: handleEditIconClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashCan,\n              onClick: () => deleteTodo(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `detailContainer ${isTodoOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-note\",\n          children: [\"Note : \", task.note]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-note\",\n          children: task.dueDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: task.url,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLink,\n            className: \"link-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 45\n          }, this), task.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      isOpen: isEditModalOpen,\n      openModal: openEditModal,\n      close: closeEditModal,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"OsQenRRf5otaPb3HfBYkmm+FMQk=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","axios","BrowserRouter","Router","Routes","Route","Link","FontAwesomeIcon","faPen","faTrashCan","faLink","faStar","EditTaskModal","TaskModal","TodoWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","task","toggleComplete","deleteTodo","searchTerm","toggleImportance","_s","isEditModalOpen","setIsEditModalOpen","isTodoOpen","setIsTodoOpen","openEditModal","closeEditModal","handleEditIconClick","handleToggleImportance","id","updatedImportantStatus","isImportant","patch","error","console","highlightSearchTerm","text","trim","regex","RegExp","replace","match","toggleTodoOpen","children","className","onClick","type","e","stopPropagation","isCompleted","checked","fileName","_jsxFileName","lineNumber","columnNumber","class","dangerouslySetInnerHTML","__html","icon","category","note","dueDate","to","url","isOpen","openModal","close","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan, faLink, faStar } from '@fortawesome/free-solid-svg-icons';\nimport { EditTaskModal } from '../Task/EditTaskModal'\nimport { TaskModal } from '../Task/TaskModal'\nimport { TodoWrapper } from './TodoWrapper';\n\nexport const Todo = ({task, toggleComplete, deleteTodo, searchTerm, toggleImportance}) => {\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isTodoOpen, setIsTodoOpen] = useState(false);\n\n    const openEditModal = () => {\n        setIsEditModalOpen(true);\n    };\n\n    const closeEditModal = () => {\n        setIsEditModalOpen(false);\n    };\n    \n    const handleEditIconClick = () => {\n        openEditModal(); \n    };\n\n    const handleToggleImportance = async (id) => {\n        try {\n            const updatedImportantStatus = !task.isImportant;\n            await axios.patch(`http://localhost:3001/tasks/${task.id}`, { isImportant: updatedImportantStatus });\n            toggleImportance(task.id, updatedImportantStatus); \n        } catch (error) {\n            console.error('Error toggling importance:', error);\n        }\n    };    \n\n    const highlightSearchTerm = (text, searchTerm) => {\n        if (!searchTerm.trim()) {\n            return text;\n        }\n        const regex = new RegExp(`(${searchTerm})`, 'gi');\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\n    }\n\n    const toggleTodoOpen = () => {\n        setIsTodoOpen(!isTodoOpen);\n    }\n\n    return (\n        <>\n            <div className=\"Todo\">\n                    <div className=\"checkContainer\" onClick={toggleTodoOpen}>\n                        <div>\n                            <label className=\"checkbox-label\">\n                                <input id=\"checkbox\" type=\"checkbox\" onClick={(e) => { e.stopPropagation(); toggleComplete(task.id)}} className={`${task.isCompleted ? 'isCompleted' : ''}`} checked={task.isCompleted} />\n                                <span class=\"checkmark\"></span>                        \n                                <p id=\"taskName\" className={`${task.isCompleted ? 'isCompleted' : \"\"}`} dangerouslySetInnerHTML={{ __html: highlightSearchTerm(task.task, searchTerm) }} />\n                            </label>                            \n                        </div>\n\n                        {/* className={`${task.completed ? 'complete' : ''}`}  */}\n                        {/* <p className={`${task.completed ? 'completed' : \"\"}`}>{task.task}</p>  */}\n\n                        <div className=\"button-container\">                             \n\n                            <button type=\"button\" className={task.isImportant ? 'important' : ''} onClick={() => handleToggleImportance(task.id)}>\n                                \n                                <FontAwesomeIcon icon={faStar} />\n                            </button>\n                            <p className=\"todo-category\">{task.category}</p>                            \n                            <button type=\"button\">\n                                <FontAwesomeIcon icon={faPen} onClick={handleEditIconClick} />\n                            </button>\n                            <button type=\"button\">\n                                <FontAwesomeIcon icon={faTrashCan} onClick={() => deleteTodo(task.id)} />\n                            </button>   \n                        </div>\n                    </div>        \n                    <div className={`detailContainer ${isTodoOpen ? 'open' : ''}`}>\n                        <p className=\"todo-note\">Note : {task.note}</p> \n                        <p className=\"todo-note\">{task.dueDate}</p>        \n                        <Link to={task.url}><FontAwesomeIcon icon={faLink} className=\"link-icon\" />{task.url}</Link>                           \n                    </div>\n            </div>\n            <EditTaskModal isOpen={isEditModalOpen} openModal={openEditModal} close={closeEditModal} task={task}/>            \n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,KAAK,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM,QAAQ,mCAAmC;AACrF,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAAEC,cAAc;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM8B,aAAa,GAAGA,CAAA,KAAM;IACxBH,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzBJ,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAC9BF,aAAa,CAAC,CAAC;EACnB,CAAC;EAED,MAAMG,sBAAsB,GAAG,MAAOC,EAAE,IAAK;IACzC,IAAI;MACA,MAAMC,sBAAsB,GAAG,CAACf,IAAI,CAACgB,WAAW;MAChD,MAAMnC,KAAK,CAACoC,KAAK,CAAE,+BAA8BjB,IAAI,CAACc,EAAG,EAAC,EAAE;QAAEE,WAAW,EAAED;MAAuB,CAAC,CAAC;MACpGX,gBAAgB,CAACJ,IAAI,CAACc,EAAE,EAAEC,sBAAsB,CAAC;IACrD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAACC,IAAI,EAAElB,UAAU,KAAK;IAC9C,IAAI,CAACA,UAAU,CAACmB,IAAI,CAAC,CAAC,EAAE;MACpB,OAAOD,IAAI;IACf;IACA,MAAME,KAAK,GAAG,IAAIC,MAAM,CAAE,IAAGrB,UAAW,GAAE,EAAE,IAAI,CAAC;IACjD,OAAOkB,IAAI,CAACI,OAAO,CAACF,KAAK,EAAGG,KAAK,IAAM,2BAA0BA,KAAM,SAAQ,CAAC;EACpF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBlB,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIZ,OAAA,CAAAE,SAAA;IAAA8B,QAAA,gBACIhC,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACbhC,OAAA;QAAKiC,SAAS,EAAC,gBAAgB;QAACC,OAAO,EAAEH,cAAe;QAAAC,QAAA,gBACpDhC,OAAA;UAAAgC,QAAA,eACIhC,OAAA;YAAOiC,SAAS,EAAC,gBAAgB;YAAAD,QAAA,gBAC7BhC,OAAA;cAAOkB,EAAE,EAAC,UAAU;cAACiB,IAAI,EAAC,UAAU;cAACD,OAAO,EAAGE,CAAC,IAAK;gBAAEA,CAAC,CAACC,eAAe,CAAC,CAAC;gBAAEhC,cAAc,CAACD,IAAI,CAACc,EAAE,CAAC;cAAA,CAAE;cAACe,SAAS,EAAG,GAAE7B,IAAI,CAACkC,WAAW,GAAG,aAAa,GAAG,EAAG,EAAE;cAACC,OAAO,EAAEnC,IAAI,CAACkC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC1L3C,OAAA;cAAM4C,KAAK,EAAC;YAAW;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/B3C,OAAA;cAAGkB,EAAE,EAAC,UAAU;cAACe,SAAS,EAAG,GAAE7B,IAAI,CAACkC,WAAW,GAAG,aAAa,GAAG,EAAG,EAAE;cAACO,uBAAuB,EAAE;gBAAEC,MAAM,EAAEtB,mBAAmB,CAACpB,IAAI,CAACA,IAAI,EAAEG,UAAU;cAAE;YAAE;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAKN3C,OAAA;UAAKiC,SAAS,EAAC,kBAAkB;UAAAD,QAAA,gBAE7BhC,OAAA;YAAQmC,IAAI,EAAC,QAAQ;YAACF,SAAS,EAAE7B,IAAI,CAACgB,WAAW,GAAG,WAAW,GAAG,EAAG;YAACc,OAAO,EAAEA,CAAA,KAAMjB,sBAAsB,CAACb,IAAI,CAACc,EAAE,CAAE;YAAAc,QAAA,eAEjHhC,OAAA,CAACT,eAAe;cAACwD,IAAI,EAAEpD;YAAO;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACT3C,OAAA;YAAGiC,SAAS,EAAC,eAAe;YAAAD,QAAA,EAAE5B,IAAI,CAAC4C;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChD3C,OAAA;YAAQmC,IAAI,EAAC,QAAQ;YAAAH,QAAA,eACjBhC,OAAA,CAACT,eAAe;cAACwD,IAAI,EAAEvD,KAAM;cAAC0C,OAAO,EAAElB;YAAoB;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eACT3C,OAAA;YAAQmC,IAAI,EAAC,QAAQ;YAAAH,QAAA,eACjBhC,OAAA,CAACT,eAAe;cAACwD,IAAI,EAAEtD,UAAW;cAACyC,OAAO,EAAEA,CAAA,KAAM5B,UAAU,CAACF,IAAI,CAACc,EAAE;YAAE;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN3C,OAAA;QAAKiC,SAAS,EAAG,mBAAkBrB,UAAU,GAAG,MAAM,GAAG,EAAG,EAAE;QAAAoB,QAAA,gBAC1DhC,OAAA;UAAGiC,SAAS,EAAC,WAAW;UAAAD,QAAA,GAAC,SAAO,EAAC5B,IAAI,CAAC6C,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/C3C,OAAA;UAAGiC,SAAS,EAAC,WAAW;UAAAD,QAAA,EAAE5B,IAAI,CAAC8C;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3C3C,OAAA,CAACV,IAAI;UAAC6D,EAAE,EAAE/C,IAAI,CAACgD,GAAI;UAAApB,QAAA,gBAAChC,OAAA,CAACT,eAAe;YAACwD,IAAI,EAAErD,MAAO;YAACuC,SAAS,EAAC;UAAW;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAACvC,IAAI,CAACgD,GAAG;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACN3C,OAAA,CAACJ,aAAa;MAACyD,MAAM,EAAE3C,eAAgB;MAAC4C,SAAS,EAAExC,aAAc;MAACyC,KAAK,EAAExC,cAAe;MAACX,IAAI,EAAEA;IAAK;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACxG,CAAC;AAEX,CAAC;AAAAlC,EAAA,CA7EYN,IAAI;AAAAqD,EAAA,GAAJrD,IAAI;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}