{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/tasks');\n        setTodos(response.data);\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n    fetchTodos(); // 컴포넌트가 마운트될 때 한 번만 작업 목록을 가져옴\n  }, []);\n  const addTodo = async todo => {\n    try {\n      const response = await axios.post('http://localhost:3001/tasks', {\n        task: todo,\n        completed: false,\n        isEditing: false\n      });\n      setTodos([...todos, response.data]);\n      console.log('New task added:', response.data);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/tasks/${id}`);\n      const updatedTodos = todos.filter(todo => todo.id !== id);\n      setTodos(updatedTodos);\n      console.log('Task deleted:', id);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const toggleComplete = async id => {\n    try {\n      const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        completed: !updatedTodo.completed\n      };\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n      setTodos(updatedTodos);\n      console.log(\"Task complete status updated:\", id);\n    } catch (error) {\n      console.error('Error updating task complete status:', error);\n    }\n  };\n  const editTodo = async (id, updatedTask) => {\n    try {\n      const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        task: updatedTask,\n        isEditing: false\n      };\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        isEditing: !todo.isEditing\n      } : todo);\n      setTodos(updatedTodos);\n      console.log(\"Task is updated:\", id);\n    } catch (error) {\n      console.error('Error updating task', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n      task: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoWrapper, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","axios","Todo","TodoForm","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","fetchTodos","response","get","data","error","console","addTodo","todo","post","task","completed","isEditing","log","deleteTodo","id","delete","updatedTodos","filter","toggleComplete","updatedTodo","find","updatedData","patch","map","editTodo","updatedTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\n\nexport const TodoWrapper = () => {\n    const [todos, setTodos] = useState([]);\n\n    useEffect(() => {\n        const fetchTodos = async () => {\n            try {\n                const response = await axios.get('http://localhost:3001/tasks');\n                setTodos(response.data);\n            } catch (error) {\n                console.error('Error fetching todos:', error);\n            }\n        };\n        \n        fetchTodos(); // 컴포넌트가 마운트될 때 한 번만 작업 목록을 가져옴\n    }, []);\n\n    const addTodo = async todo => {\n        try {\n            const response = await axios.post('http://localhost:3001/tasks', {\n                task: todo,\n                completed: false,\n                isEditing: false\n            });\n\n            setTodos([...todos, response.data]);\n            console.log('New task added:', response.data);\n        } catch (error) {\n            console.error('Error adding task:', error);\n        }\n    };\n\n    const deleteTodo = async id => {\n        try {\n            await axios.delete(`http://localhost:3001/tasks/${id}`);\n            const updatedTodos = todos.filter(todo => todo.id !== id);\n            setTodos(updatedTodos);\n            console.log('Task deleted:', id);\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const toggleComplete = async id => {\n        try {\n            const updatedTodo = todos.find(todo => todo.id === id);\n            const updatedData = { completed: !updatedTodo.completed };\n            await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n            const updatedTodos = todos.map(todo =>\n                todo.id === id ? { ...todo, completed: !todo.completed } : todo\n            );\n            setTodos(updatedTodos);\n            console.log(\"Task complete status updated:\", id);\n        } catch (error) {\n            console.error('Error updating task complete status:', error);\n        }\n    };\n\n    const editTodo = async (id, updatedTask) => {\n        try {\n            const updatedTodo = todos.find(todo => todo.id === id);\n            const updatedData = { task: updatedTask, isEditing: false };\n            await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n            const updatedTodos = todos.map(todo =>\n                todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n            );\n            setTodos(updatedTodos);\n            console.log(\"Task is updated:\", id);\n        } catch (error) {\n            console.error('Error updating task', error);\n        }\n    };\n\n    return (\n        <div className=\"TodoWrapper\">\n            <h3 className=\"title\">To Do List</h3>\n            <TodoForm addTodo={addTodo} />\n            {todos.map((todo, index) => (\n                <Todo\n                    task={todo}\n                    key={index}\n                    toggleComplete={toggleComplete}\n                    deleteTodo={deleteTodo}\n                    editTodo={editTodo}\n                />\n            ))}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}