{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/EditTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { TodoWrapper } from './TodoWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditTodoForm = ({\n  editTodo,\n  task\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // console.log(value)\n    editTodo(value, task.id);\n    setValue(\"\");\n  };\n  return (\n    /*#__PURE__*/\n    // <form className=\"TodoForm\" onSubmit={handleSubmit}>\n    //     <input type=\"text\" className=\"task-input\" value={value} placeholder=\"Update Task\" required autoFocus maxLength=\"25\" onChange={\n    //         (e) => setValue(e.target.value)\n    //         // console.log(e.target.value)\n    //     } \n    //     />\n    _jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: () => toggleComplete(task.id),\n        className: `${task.completed ? 'completed' : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${task.completed ? 'completed' : \"\"}`,\n        children: task.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"todo-btn\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlus,\n          style: {\n            color: \"#ffffff\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 52\n        }, this), \"Update Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(EditTodoForm, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c = EditTodoForm;\nvar _c;\n$RefreshReg$(_c, \"EditTodoForm\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faPlus","TodoWrapper","jsxDEV","_jsxDEV","EditTodoForm","editTodo","task","_s","value","setValue","handleSubmit","e","preventDefault","id","children","type","onClick","toggleComplete","className","completed","fileName","_jsxFileName","lineNumber","columnNumber","icon","style","color","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/EditTodoForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { TodoWrapper } from './TodoWrapper'\n\nexport const EditTodoForm = ({editTodo, task}) => {\n    const [value, setValue] = useState(\"\")\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // console.log(value)\n        editTodo(value, task.id);\n        \n        setValue(\"\")\n    }\n    return (\n        // <form className=\"TodoForm\" onSubmit={handleSubmit}>\n        //     <input type=\"text\" className=\"task-input\" value={value} placeholder=\"Update Task\" required autoFocus maxLength=\"25\" onChange={\n        //         (e) => setValue(e.target.value)\n        //         // console.log(e.target.value)\n        //     } \n        //     />\n        <form>\n        <input type=\"checkbox\" onClick={() => toggleComplete(task.id)} className={`${task.completed ? 'completed' : \"\"}`} />\n<p className={`${task.completed ? 'completed' : \"\"}`}>{task.task}</p> \n        <button type=\"submit\" className=\"todo-btn\"><FontAwesomeIcon icon={faPlus} style={{color: \"#ffffff\"}} />Update Task</button>           \n        </form>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,SAASC,WAAW,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACAP,QAAQ,CAACG,KAAK,EAAEF,IAAI,CAACO,EAAE,CAAC;IAExBJ,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EACD;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACAN,OAAA;MAAAW,QAAA,gBACAX,OAAA;QAAOY,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEA,CAAA,KAAMC,cAAc,CAACX,IAAI,CAACO,EAAE,CAAE;QAACK,SAAS,EAAG,GAAEZ,IAAI,CAACa,SAAS,GAAG,WAAW,GAAG,EAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5HpB,OAAA;QAAGe,SAAS,EAAG,GAAEZ,IAAI,CAACa,SAAS,GAAG,WAAW,GAAG,EAAG,EAAE;QAAAL,QAAA,EAAER,IAAI,CAACA;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7DpB,OAAA;QAAQY,IAAI,EAAC,QAAQ;QAACG,SAAS,EAAC,UAAU;QAAAJ,QAAA,gBAACX,OAAA,CAACJ,eAAe;UAACyB,IAAI,EAAExB,MAAO;UAACyB,KAAK,EAAE;YAACC,KAAK,EAAE;UAAS;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAW;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrH;EAAC;AAEf,CAAC;AAAAhB,EAAA,CAvBYH,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}