{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { EditTaskModal } from '../Task/EditTaskModal';\nimport { TaskModal } from '../Task/TaskModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  task,\n  toggleComplete,\n  deleteTodo,\n  editTodo,\n  dueDate,\n  sear\n}) => {\n  _s();\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const openEditModal = () => {\n    setIsEditModalOpen(true);\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: () => toggleComplete(task.id),\n        className: `${task.completed ? 'completed' : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${task.completed ? 'completed' : \"\"}`,\n        children: task.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPen,\n            onClick: openEditModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrashCan,\n            onClick: () => deleteTodo(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      isOpen: isEditModalOpen,\n      openModal: openEditModal,\n      close: closeEditModal,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"n/jOvDO4FtmJGPLMmoE++D0mAIU=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","axios","FontAwesomeIcon","faPen","faTrashCan","EditTaskModal","TaskModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","task","toggleComplete","deleteTodo","editTodo","dueDate","sear","_s","isEditModalOpen","setIsEditModalOpen","openEditModal","closeEditModal","children","className","type","onClick","id","completed","fileName","_jsxFileName","lineNumber","columnNumber","icon","isOpen","openModal","close","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { EditTaskModal } from '../Task/EditTaskModal'\nimport { TaskModal } from '../Task/TaskModal'\n\nexport const Todo = ({task, toggleComplete, deleteTodo, editTodo, dueDate, sear}) => {\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n    const openEditModal = () => {\n        setIsEditModalOpen(true);\n    };\n\n    const closeEditModal = () => {\n        setIsEditModalOpen(false);\n    };\n\n    return (\n        <>\n            <div className=\"Todo\">\n                    <input type=\"checkbox\" onClick={() => toggleComplete(task.id)} className={`${task.completed ? 'completed' : \"\"}`} />\n                    <p className={`${task.completed ? 'completed' : \"\"}`}>{task.task}</p> \n                    <div>\n                        <button type=\"button\">\n                            <FontAwesomeIcon icon={faPen} onClick={openEditModal}/>\n\n                        </button>\n                        <button type=\"button\">\n                            <FontAwesomeIcon icon={faTrashCan} onClick={() => deleteTodo(task.id)} />\n                        </button>                           \n                    </div>                    \n            </div>\n            <EditTaskModal isOpen={isEditModalOpen} openModal={openEditModal} close={closeEditModal} task={task}/>            \n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,KAAK,EAAEC,UAAU,QAAQ,mCAAmC;AACrE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,SAAS,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAAEC,cAAc;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IACxBD,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IACzBF,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACIZ,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACbf,OAAA;QAAOiB,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACD,IAAI,CAACe,EAAE,CAAE;QAACH,SAAS,EAAG,GAAEZ,IAAI,CAACgB,SAAS,GAAG,WAAW,GAAG,EAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpHxB,OAAA;QAAGgB,SAAS,EAAG,GAAEZ,IAAI,CAACgB,SAAS,GAAG,WAAW,GAAG,EAAG,EAAE;QAAAL,QAAA,EAAEX,IAAI,CAACA;MAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrExB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAQiB,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACjBf,OAAA,CAACN,eAAe;YAAC+B,IAAI,EAAE9B,KAAM;YAACuB,OAAO,EAAEL;UAAc;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEnD,CAAC,eACTxB,OAAA;UAAQiB,IAAI,EAAC,QAAQ;UAAAF,QAAA,eACjBf,OAAA,CAACN,eAAe;YAAC+B,IAAI,EAAE7B,UAAW;YAACsB,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAACF,IAAI,CAACe,EAAE;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNxB,OAAA,CAACH,aAAa;MAAC6B,MAAM,EAAEf,eAAgB;MAACgB,SAAS,EAAEd,aAAc;MAACe,KAAK,EAAEd,cAAe;MAACV,IAAI,EAAEA;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACxG,CAAC;AAEX,CAAC;AAAAd,EAAA,CA7BYP,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}