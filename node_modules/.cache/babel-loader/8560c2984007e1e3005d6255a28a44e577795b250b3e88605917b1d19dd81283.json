{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/TaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TaskModal = () => {\n  _s();\n  const [startDate, setStartDate] = useState(new Date());\n  const fileInputRef = /*#__PURE__*/React.createRef();\n  const fileUploadHandler = event => {\n    // event.preventDefault();\n    const reader = new FileReader();\n    const file = event.target.files[0];\n    console.log(file);\n    // // // 파일이 이미지인지 확인\n    // // if (file) {\n    // //     reader.onloadend = () => {\n    // //         this.setState({\n    // //             file : file,\n    // //             previewURL : reader.result\n    // //         });\n\n    // //         this.props.handleImageUpload(reader.result);\n    // //     }    \n    //     reader.readAsDataURL(file);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskModalContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create a New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"task-note\",\n        placeholder: \"Add some extra notes here...\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpg,image/png,image/jpeg\",\n        name: \"profile_img\",\n        onChange: this.fileUploadHandler,\n        onClick: this.fileUploadHandler,\n        className: \"profile\",\n        ref: this.fileInputRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n};\n_s(TaskModal, \"7VgZ1AaRN4UkTWnNfs7/CGxziHc=\");\n_c = TaskModal;\nexport default TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","Component","FontAwesomeIcon","faImage","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskModal","_s","startDate","setStartDate","Date","fileInputRef","createRef","fileUploadHandler","event","reader","FileReader","file","target","files","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","autoFocus","icon","accept","name","onChange","onClick","ref","style","display","selected","date","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/TaskModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const TaskModal = () => {\n    const [startDate, setStartDate] = useState(new Date());   \n    const fileInputRef = React.createRef();  \n\n    const fileUploadHandler = (event) => {\n        // event.preventDefault();\n        const reader = new FileReader();\n        const file = event.target.files[0]; \n        console.log(file)\n        // // // 파일이 이미지인지 확인\n        // // if (file) {\n        // //     reader.onloadend = () => {\n        // //         this.setState({\n        // //             file : file,\n        // //             previewURL : reader.result\n        // //         });\n\n        // //         this.props.handleImageUpload(reader.result);\n        // //     }    \n        //     reader.readAsDataURL(file);\n        return (\n            <div className=\"TaskModalContainer\">\n                <h3>Create a New Task</h3>\n                <input type=\"text\" className=\"task-note\"  placeholder=\"Add some extra notes here...\" autoFocus ></input>\n                <button type=\"button\"><FontAwesomeIcon icon={faImage} /></button>\n                <input type=\"file\" accept=\"image/jpg,image/png,image/jpeg\" name=\"profile_img\" onChange={this.fileUploadHandler} onClick={this.fileUploadHandler} className=\"profile\" ref={this.fileInputRef} style={{ display: 'none'}} ></input> \n                <p>Add Due Date</p>\n                <>\n                    <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n                </>\n                <button type=\"button\">Create Task</button>\n            </div>\n        )\n};\n\n\n}\n\nexport default TaskModal"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}