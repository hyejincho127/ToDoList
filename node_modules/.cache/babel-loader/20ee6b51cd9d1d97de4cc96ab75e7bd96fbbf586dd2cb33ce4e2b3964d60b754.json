{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/TaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TaskModal = () => {\n  _s();\n  const [startDate, setStartDate] = useState(new Date());\n  const fileInputRef = /*#__PURE__*/React.createRef();\n\n  // const fileUploadHandler = (event) => {\n  //     // event.preventDefault();\n  //     const reader = new FileReader();\n  //     const file = event.target.files[0]; \n  //     // // // 파일이 이미지인지 확인\n  //     // // if (file) {\n  //     // //     reader.onloadend = () => {\n  //     // //         this.setState({\n  //     // //             file : file,\n  //     // //             previewURL : reader.result\n  //     // //         });\n\n  //     // //         this.props.handleImageUpload(reader.result);\n  //     // //     }    \n  //     //     reader.readAsDataURL(file);\n\n  const linkURL = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskModalContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"task-note\",\n      placeholder: \"Add some extra notes here...\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"add_img_btn\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Due Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: date => setStartDate(date),\n        className: \"datePicker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"input\",\n      children: \"url\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"create-btn\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n// export default TaskModal\n_s(TaskModal, \"7VgZ1AaRN4UkTWnNfs7/CGxziHc=\");\n_c = TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","Component","FontAwesomeIcon","faImage","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskModal","_s","startDate","setStartDate","Date","fileInputRef","createRef","linkURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","autoFocus","icon","selected","onChange","date","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/TaskModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const TaskModal = () => {\n    const [startDate, setStartDate] = useState(new Date());   \n    const fileInputRef = React.createRef();  \n\n    // const fileUploadHandler = (event) => {\n    //     // event.preventDefault();\n    //     const reader = new FileReader();\n    //     const file = event.target.files[0]; \n    //     // // // 파일이 이미지인지 확인\n    //     // // if (file) {\n    //     // //     reader.onloadend = () => {\n    //     // //         this.setState({\n    //     // //             file : file,\n    //     // //             previewURL : reader.result\n    //     // //         });\n\n    //     // //         this.props.handleImageUpload(reader.result);\n    //     // //     }    \n    //     //     reader.readAsDataURL(file);\n\n    const linkURL = () => {\n\n    }\n        return (\n            <div className=\"TaskModalContainer\">\n                <h3>Create a New Task</h3>\n                <input type=\"text\" className=\"task-note\"  placeholder=\"Add some extra notes here...\" autoFocus ></input>\n                <button type=\"button\" className=\"add_img_btn\"><FontAwesomeIcon icon={faImage} /></button>\n                {/* <input type=\"file\" accept=\"image/jpg,image/png,image/jpeg\" name=\"profile_img\" onChange={this.fileUploadHandler} onClick={this.fileUploadHandler} className=\"profile\" ref={this.fileInputRef} style={{ display: 'none'}} ></input>  */}\n                <p>Add Due Date</p>\n                <>\n                    <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} className=\"datePicker\" />\n                </>\n                <input type=\"input\">url</input>\n                \n                <button type=\"button\" className=\"create-btn\">Create Task</button>\n            </div>\n        )\n\n    }\n\n\n\n// export default TaskModal"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,OAAOC,UAAU,MAAM,kBAAkB;AAEzC,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAIa,IAAI,CAAC,CAAC,CAAC;EACtD,MAAMC,YAAY,gBAAGf,KAAK,CAACgB,SAAS,CAAC,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM,CAEtB,CAAC;EACG,oBACIV,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BZ,OAAA;MAAAY,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACN,SAAS,EAAC,WAAW;MAAEO,WAAW,EAAC,8BAA8B;MAACC,SAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACxGhB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,aAAa;MAAAC,QAAA,eAACZ,OAAA,CAACJ,eAAe;QAACwB,IAAI,EAAEvB;MAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEzFhB,OAAA;MAAAY,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnBhB,OAAA,CAAAE,SAAA;MAAAU,QAAA,eACIZ,OAAA,CAACF,UAAU;QAACuB,QAAQ,EAAEhB,SAAU;QAACiB,QAAQ,EAAGC,IAAI,IAAKjB,YAAY,CAACiB,IAAI,CAAE;QAACZ,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBACpG,CAAC,eACHhB,OAAA;MAAOiB,IAAI,EAAC,OAAO;MAAAL,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAE/BhB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAGd,CAAC;;AAIL;AAAAZ,EAAA,CA3CaD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}