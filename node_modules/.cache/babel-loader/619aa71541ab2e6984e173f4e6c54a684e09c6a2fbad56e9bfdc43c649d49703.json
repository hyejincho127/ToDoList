{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan, faLink } from '@fortawesome/free-solid-svg-icons';\nimport { EditTaskModal } from '../Task/EditTaskModal';\nimport { TaskModal } from '../Task/TaskModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  task,\n  toggleComplete,\n  deleteTodo,\n  searchTerm\n}) => {\n  _s();\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isTodoOpen, setIsTodoOpen] = useState(false);\n  const openEditModal = () => {\n    setIsEditModalOpen(true);\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n  };\n  const highlightSearchTerm = (text, searchTerm) => {\n    if (!searchTerm.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${searchTerm})`, 'gi');\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n  const toggleTodoOpen = () => {\n    setIsTodoOpen(!isTodoOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkContainer\",\n        onClick: toggleTodoOpen,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"checkbox\",\n            type: \"checkbox\",\n            onClick: e => {\n              e.stopPropagation();\n              toggleComplete(task.id);\n            },\n            className: `${task.isCompleted ? 'isCompleted' : ''}`,\n            checked: task.isCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"taskName\",\n          className: `${task.isCompleted ? 'isCompleted' : \"\"}`,\n          dangerouslySetInnerHTML: {\n            __html: highlightSearchTerm(task.task, searchTerm)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPen,\n              onClick: openEditModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashCan,\n              onClick: () => deleteTodo(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `detailContainer ${isTodoOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todoNote\",\n          children: task.note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todoCategory\",\n          children: task.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: task.url,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLink,\n            size: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 45\n          }, this), task.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      isOpen: isEditModalOpen,\n      openModal: openEditModal,\n      close: closeEditModal,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"OsQenRRf5otaPb3HfBYkmm+FMQk=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","axios","BrowserRouter","Router","Routes","Route","Link","FontAwesomeIcon","faPen","faTrashCan","faLink","EditTaskModal","TaskModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","task","toggleComplete","deleteTodo","searchTerm","_s","isEditModalOpen","setIsEditModalOpen","isTodoOpen","setIsTodoOpen","openEditModal","closeEditModal","highlightSearchTerm","text","trim","regex","RegExp","replace","match","toggleTodoOpen","children","className","onClick","id","type","e","stopPropagation","isCompleted","checked","fileName","_jsxFileName","lineNumber","columnNumber","class","dangerouslySetInnerHTML","__html","icon","note","category","to","url","size","isOpen","openModal","close","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan, faLink } from '@fortawesome/free-solid-svg-icons';\nimport { EditTaskModal } from '../Task/EditTaskModal'\nimport { TaskModal } from '../Task/TaskModal'\n\nexport const Todo = ({task, toggleComplete, deleteTodo, searchTerm}) => {\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isTodoOpen, setIsTodoOpen] = useState(false);\n\n    const openEditModal = () => {\n        setIsEditModalOpen(true);\n    };\n\n    const closeEditModal = () => {\n        setIsEditModalOpen(false);\n    };\n\n    const highlightSearchTerm = (text, searchTerm) => {\n        if (!searchTerm.trim()) {\n            return text;\n        }\n        const regex = new RegExp(`(${searchTerm})`, 'gi');\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\n    }\n\n    const toggleTodoOpen = () => {\n        setIsTodoOpen(!isTodoOpen);\n    }\n\n    return (\n        <>\n            <div className=\"Todo\">\n                    <div className=\"checkContainer\" onClick={toggleTodoOpen}>\n                        <label className=\"checkbox-label\">\n                            <input id=\"checkbox\" type=\"checkbox\" onClick={(e) => { e.stopPropagation(); toggleComplete(task.id)}} className={`${task.isCompleted ? 'isCompleted' : ''}`} checked={task.isCompleted} />\n                            <span class=\"checkmark\"></span>\n                        </label>\n                        {/* className={`${task.completed ? 'complete' : ''}`}  */}\n                        {/* <p className={`${task.completed ? 'completed' : \"\"}`}>{task.task}</p>  */}\n                        <p id=\"taskName\" className={`${task.isCompleted ? 'isCompleted' : \"\"}`} dangerouslySetInnerHTML={{ __html: highlightSearchTerm(task.task, searchTerm) }} />\n                        <div className=\"button-container\">\n                            <button type=\"button\">\n                                <FontAwesomeIcon icon={faPen} onClick={openEditModal}/>\n                            </button>\n                            <button type=\"button\">\n                                <FontAwesomeIcon icon={faTrashCan} onClick={() => deleteTodo(task.id)} />\n                            </button>   \n                        </div>\n                    </div>        \n                    <div className={`detailContainer ${isTodoOpen ? 'open' : ''}`}>\n                        <p className=\"todoNote\">{task.note}</p>                 \n                        <p className=\"todoCategory\">{task.category}</p>\n                        <Link to={task.url}><FontAwesomeIcon icon={faLink} size=\"lg\" />{task.url}</Link>        \n                    </div>\n            </div>\n            <EditTaskModal isOpen={isEditModalOpen} openModal={openEditModal} close={closeEditModal} task={task}/>            \n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}