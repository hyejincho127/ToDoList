{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { EditTaskModal } from '../Task/EditTaskModal';\nimport { TaskModal } from '../Task/TaskModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  task,\n  toggleComplete,\n  deleteTodo,\n  searchTerm\n}) => {\n  _s();\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isTodoOpen, setIsTodoOpen] = useState(false);\n  const openEditModal = () => {\n    setIsEditModalOpen(true);\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n  };\n  const highlightSearchTerm = (text, searchTerm) => {\n    if (!searchTerm.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${searchTerm})`, 'gi');\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n  const toggleOpenTodo = () => {\n    setIsTodoOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkContainer\",\n        onClick: () => openTodo(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: () => toggleComplete(task.id),\n          className: `${task.completed ? 'completed' : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${task.completed ? 'completed' : \"\"}`,\n          dangerouslySetInnerHTML: {\n            __html: highlightSearchTerm(task.task, searchTerm)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPen,\n            onClick: openEditModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrashCan,\n            onClick: () => deleteTodo(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todoNote\",\n          children: task.note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todoCategory\",\n          children: task.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      isOpen: isEditModalOpen,\n      openModal: openEditModal,\n      close: closeEditModal,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"OsQenRRf5otaPb3HfBYkmm+FMQk=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","axios","FontAwesomeIcon","faPen","faTrashCan","EditTaskModal","TaskModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","task","toggleComplete","deleteTodo","searchTerm","_s","isEditModalOpen","setIsEditModalOpen","isTodoOpen","setIsTodoOpen","openEditModal","closeEditModal","highlightSearchTerm","text","trim","regex","RegExp","replace","match","toggleOpenTodo","children","className","onClick","openTodo","type","id","completed","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","icon","note","category","url","isOpen","openModal","close","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { EditTaskModal } from '../Task/EditTaskModal'\nimport { TaskModal } from '../Task/TaskModal'\n\nexport const Todo = ({task, toggleComplete, deleteTodo, searchTerm}) => {\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isTodoOpen, setIsTodoOpen] = useState(false);\n\n    const openEditModal = () => {\n        setIsEditModalOpen(true);\n    };\n\n    const closeEditModal = () => {\n        setIsEditModalOpen(false);\n    };\n\n    const highlightSearchTerm = (text, searchTerm) => {\n        if (!searchTerm.trim()) {\n            return text;\n        }\n        const regex = new RegExp(`(${searchTerm})`, 'gi');\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\n    }\n\n    const toggleOpenTodo = () => {\n        setIsTodoOpen(true);\n    }\n\n    return (\n        <>\n            <div className=\"Todo\">\n                    <div className=\"checkContainer\" onClick={() =>openTodo()}>\n                        <input type=\"checkbox\" onClick={() => toggleComplete(task.id)} className={`${task.completed ? 'completed' : \"\"}`} />\n                        {/* <p className={`${task.completed ? 'completed' : \"\"}`}>{task.task}</p>  */}\n                        <p className={`${task.completed ? 'completed' : \"\"}`} dangerouslySetInnerHTML={{ __html: highlightSearchTerm(task.task, searchTerm) }} />\n                        <button type=\"button\">\n                            <FontAwesomeIcon icon={faPen} onClick={openEditModal}/>\n                        </button>\n                        <button type=\"button\">\n                            <FontAwesomeIcon icon={faTrashCan} onClick={() => deleteTodo(task.id)} />\n                        </button>    \n                    </div>        \n                    <div className=\"detailContainer\">\n                        <p className=\"todoNote\">{task.note}</p>                 \n                        <p className=\"todoCategory\">{task.category}</p>\n                        <p>\n                            {task.url}</p>            \n                    </div>\n            </div>\n            <EditTaskModal isOpen={isEditModalOpen} openModal={openEditModal} close={closeEditModal} task={task}/>            \n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}