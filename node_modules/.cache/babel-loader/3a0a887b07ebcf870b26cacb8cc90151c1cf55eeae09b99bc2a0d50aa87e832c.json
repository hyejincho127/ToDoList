{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { EditTodoForm } from './EditTodoForm';\nimport { TaskModal } from '../TaskModal';\n// uuidv4();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = ({\n  selectedCategoryId\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = todo => {\n    setTodos([...todos, {\n      id: todos.length + 1,\n      task: todo,\n      completed: false,\n      isEditing: false\n    }]);\n    // console.log(todos)\n\n    if (todos.length > 7) {\n      setTodos([...todos]);\n    }\n  };\n  // uuidv4()     \n  // TodoWrapper 컴포넌트 내에서 fetchTodos 함수를 사용합니다.\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // 서버로부터 데이터를 가져오는 API 요청을 보냅니다.\n        const fetchedTodos = await fetchTodos(selectedCategoryId);\n        setTodos(fetchedTodos);\n      } catch (error) {\n        // 에러가 발생한 경우 에러를 콘솔에 출력하고 빈 배열을 설정합니다.\n        console.error('Error fetching todos:', error);\n        setTodos([]);\n      }\n    };\n    fetchData();\n  }, [selectedCategoryId]);\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n    console.log(\"Completed!\");\n  };\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), todos.map((todo, index) => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      editTodo: editTask,\n      task: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(Todo, {\n      task: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 17\n  }, this);\n};\n_s(TodoWrapper, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","Todo","TodoForm","EditTodoForm","TaskModal","jsxDEV","_jsxDEV","TodoWrapper","selectedCategoryId","_s","todos","setTodos","addTodo","todo","id","length","task","completed","isEditing","fetchData","fetchedTodos","fetchTodos","error","console","toggleComplete","map","log","editTodo","deleteTodo","filter","editTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Todo } from './Todo'\nimport { TodoForm } from './TodoForm'\nimport { EditTodoForm } from './EditTodoForm'\nimport { TaskModal } from '../TaskModal'\n// uuidv4();\n\nexport const TodoWrapper = ({ selectedCategoryId }) => {\n                const [todos, setTodos] = useState([])\n                const addTodo = todo => {\n                        setTodos([...todos, {id: todos.length+1, task: todo, completed: false, isEditing: false}])\n                        // console.log(todos)\n\n                        if(todos.length > 7) {\n                                setTodos([...todos])\n                        }\n                }\n// uuidv4()     \n    // TodoWrapper 컴포넌트 내에서 fetchTodos 함수를 사용합니다.\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // 서버로부터 데이터를 가져오는 API 요청을 보냅니다.\n                const fetchedTodos = await fetchTodos(selectedCategoryId);\n                setTodos(fetchedTodos);\n            } catch (error) {\n                // 에러가 발생한 경우 에러를 콘솔에 출력하고 빈 배열을 설정합니다.\n                console.error('Error fetching todos:', error);\n                setTodos([]);\n            }\n        };\n    \n        fetchData();\n    }, [selectedCategoryId]);\n    \n\n                const toggleComplete = id => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, completed: !todo.completed} : todo))\n                        console.log(\"Completed!\")\n                }\n                const editTodo = id => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, isEditing: !todo.isEditing} : todo))\n                }\n                const deleteTodo = id => {\n                        setTodos(todos.filter(todo => todo.id !== id))\n                }\n\n                const editTask = (task, id) => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, task, isEditing: !todo.isEditing} : todo))\n                }\n        return (\n                <div className= \"TodoWrapper\">                 \n                <h3 className=\"title\">To Do List</h3>     \n                        <TodoForm addTodo={addTodo} /> \n                        {todos.map((todo, index) => (\n                                todo.isEditing ? (\n                                        <EditTodoForm editTodo={editTask} task={todo} />\n                                ) : (\n                                <Todo task={todo} key={index} toggleComplete={toggleComplete} deleteTodo={deleteTodo} editTodo={editTodo}/>                          \n                                )\n                        ))}  \n                </div>\n        )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}