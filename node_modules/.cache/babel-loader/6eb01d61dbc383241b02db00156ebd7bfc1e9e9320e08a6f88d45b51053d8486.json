{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/TaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage, faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AddImage from './AddImage';\n\n// const addNote = (noteContent) => {\n//     console.log(noteContent);\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskModal = ({\n  handleClose,\n  handleAddTodo\n}) => {\n  _s();\n  const [dueDate, setDueDate] = useState(new Date());\n  const [note, setNote] = useState(\"\");\n  // const addNote = note => {\n  //     setNote([...note])\n  //     console.log(note);\n  // }\n  const [image, setImage] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      // formData.append('image', image);\n      formData.append('dueDate', dueDate);\n      formData.append('note', note);\n      const response = await axios.post('http://localhost:3001/tasks', data, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(formData);\n      handleAddTodo({\n        dueDate,\n        note,\n        image,\n        ...response.data\n      });\n      handleClose();\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  // console.log(note);\n\n  // addNote(note);\n\n  // setNote(\"\")\n\n  const fileInputRef = /*#__PURE__*/React.createRef();\n  // const fileUploadHandler = (event) => {\n  //     // event.preventDefault();\n  //     const reader = new FileReader();\n  //     const file = event.target.files[0]; \n  //     // // // 파일이 이미지인지 확인\n  //     // // if (file) {\n  //     // //     reader.onloadend = () => {\n  //     // //         this.setState({\n  //     // //             file : file,\n  //     // //             previewURL : reader.result\n  //     // //         });\n\n  //     // //         this.props.handleImageUpload(reader.result);\n  //     // //     }    \n  //     //     reader.readAsDataURL(file);\n\n  // const linkURL = () => {\n\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskModalContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"task-note\",\n      placeholder: \"Add some extra notes here...\",\n      autoFocus: true,\n      value: note,\n      onChange: e => setNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddImage, {\n      onSelectedImage: setImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Due Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"due-date\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: dueDate,\n        onChange: date => setDueDate(date),\n        className: \"datePicker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"create-btn\",\n      onClick: handleSubmit,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this);\n};\n\n// export default TaskModal\n_s(TaskModal, \"aoKajT5q/qsBNgAWg3WNpb49Tts=\");\n_c = TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","axios","Component","FontAwesomeIcon","faImage","faCalendar","DatePicker","AddImage","jsxDEV","_jsxDEV","TaskModal","handleClose","handleAddTodo","_s","dueDate","setDueDate","Date","note","setNote","image","setImage","handleSubmit","e","preventDefault","formData","FormData","append","response","post","data","headers","console","log","error","fileInputRef","createRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","autoFocus","value","onChange","target","onSelectedImage","selected","date","type","onClick","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/TaskModal.js"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios' \nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage, faCalendar } from '@fortawesome/free-solid-svg-icons'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport AddImage from './AddImage'\n\n// const addNote = (noteContent) => {\n//     console.log(noteContent);\n// };\n\nexport const TaskModal = ({ handleClose, handleAddTodo }) => {\n    const [dueDate, setDueDate] = useState(new Date());   \n    const [note, setNote] = useState(\"\")\n    // const addNote = note => {\n    //     setNote([...note])\n    //     console.log(note);\n    // }\n    const [image, setImage] = useState(null);\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const formData = new FormData();\n            // formData.append('image', image);\n            formData.append('dueDate', dueDate);\n            formData.append('note', note);\n\n            const response = await axios.post('http://localhost:3001/tasks', data, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n\n            console.log(formData)\n            handleAddTodo({\n                dueDate,\n                note,\n                image,\n                ...response.data\n            });\n\n            handleClose();\n        } catch (error) {\n            console.error('Error creating task:', error);\n        }\n    };\n        // console.log(note);\n\n        // addNote(note);\n\n        // setNote(\"\")\n\n    const fileInputRef = React.createRef();     \n    // const fileUploadHandler = (event) => {\n    //     // event.preventDefault();\n    //     const reader = new FileReader();\n    //     const file = event.target.files[0]; \n    //     // // // 파일이 이미지인지 확인\n    //     // // if (file) {\n    //     // //     reader.onloadend = () => {\n    //     // //         this.setState({\n    //     // //             file : file,\n    //     // //             previewURL : reader.result\n    //     // //         });\n\n    //     // //         this.props.handleImageUpload(reader.result);\n    //     // //     }    \n    //     //     reader.readAsDataURL(file);\n\n        // const linkURL = () => {\n\n        // }\n        return (\n            <div className=\"TaskModalContainer\">\n                <h3>Create a New Task</h3>\n                <textarea className=\"task-note\" placeholder=\"Add some extra notes here...\" autoFocus value={note} onChange={(e)=> setNote(e.target.value)}></textarea>\n                {/* console.log(e.target.value) */}\n                <AddImage onSelectedImage={setImage} />\n                {/* <button type=\"button\" className=\"add_img_btn\"><FontAwesomeIcon icon={faImage} /></button> */}\n                {/* <input type=\"file\" accept=\"image/jpg,image/png,image/jpeg\" name=\"profile_img\" onChange={this.fileUploadHandler} onClick={this.fileUploadHandler} className=\"profile\" ref={this.fileInputRef} style={{ display: 'none'}} ></input>  */}\n                <p>Add Due Date</p>\n                <div className=\"due-date\">       \n                    <DatePicker selected={dueDate} onChange={(date) => setDueDate(date)} className=\"datePicker\" /> \n                    {/* <FontAwesomeIcon icon={faCalendar} className=\"calender-btn\"/> */}\n                </div>\n                {/* <input type=\"input\">url</input> */}\n                <button type=\"submit\" className=\"create-btn\" onClick={handleSubmit} >Create Task</button>\n                {/* {()=>console.log(\"Submit!\")} */}\n            </div>\n        )\n    }\n\n\n\n// export default TaskModal"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}