{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { EditTodoForm } from './EditTodoForm';\nimport { TaskModal } from '../TaskModal';\n// uuidv4();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = async todo => {\n    try {\n      const response = await axios.post('http://localhost:3001/tasks', {\n        task: todo,\n        category: daily,\n        completed: false,\n        isEditing: false\n      });\n      setTodos([...todos, response.data]);\n      // console.log(todos)\n      // {id: todos.length+1, task: todo, completed: false, isEditing: false}]\n      if (todos.length > 7) {\n        return;\n        // setTodos([...todos])\n      }\n      console.log('New task added:', response.data);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  // uuidv4()     \n  useEffect(() => {\n    console.log(todos); // 상태 업데이트 이후에 todos 상태를 로깅\n  }, [todos]);\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n    console.log(\"Completed!\");\n  };\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  // const handleDelete = async (id) => {\n  //         try {\n  //                 const response = await axios.delete(`http://localhost:3001/tasks/${id}`);\n  //                 console.log('Task deleted:', response.data); \n  //         } catch (error) {\n  //                 console.error('Error deleting task:', error);\n  //         }\n  // }\n\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), todos.map((todo, index) => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      editTodo: editTask,\n      task: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(Todo, {\n      task: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 17\n  }, this);\n};\n_s(TodoWrapper, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","axios","v4","uuidv4","Todo","TodoForm","EditTodoForm","TaskModal","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","addTodo","todo","response","post","task","category","daily","completed","isEditing","data","length","console","log","error","toggleComplete","id","map","editTodo","deleteTodo","filter","editTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Todo } from './Todo'\nimport { TodoForm } from './TodoForm'\nimport { EditTodoForm } from './EditTodoForm'\nimport { TaskModal } from '../TaskModal'\n// uuidv4();\n\nexport const TodoWrapper = () => {\n                const [todos, setTodos] = useState([]);\n\n                const addTodo = async todo => {\n                try {\n                        const response = await axios.post('http://localhost:3001/tasks', {\n                                task: todo,\n                                category: daily,\n                                completed: false,\n                                isEditing: false\n                        });\n\n                        setTodos([...todos, response.data]);\n                        // console.log(todos)\n                        // {id: todos.length+1, task: todo, completed: false, isEditing: false}]\n                        if(todos.length > 7) {\n                                return;\n                                // setTodos([...todos])\n                        }\n                        console.log('New task added:', response.data);\n                } catch (error) {\n                        console.error('Error adding task:', error);\n                }\n        }\n// uuidv4()     \n                useEffect(() => {\n                        console.log(todos); // 상태 업데이트 이후에 todos 상태를 로깅\n                }, [todos]); \n                \n                const toggleComplete = id => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, completed: !todo.completed} : todo))\n                        console.log(\"Completed!\")\n                }\n                const editTodo = id => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, isEditing: !todo.isEditing} : todo))\n                }\n                const deleteTodo = id => {\n                        setTodos(todos.filter(todo => todo.id !== id))\n                }\n\n                \n                // const handleDelete = async (id) => {\n                //         try {\n                //                 const response = await axios.delete(`http://localhost:3001/tasks/${id}`);\n                //                 console.log('Task deleted:', response.data); \n                //         } catch (error) {\n                //                 console.error('Error deleting task:', error);\n                //         }\n                // }\n                \n                const editTask = (task, id) => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, task, isEditing: !todo.isEditing} : todo))\n                }\n        return (\n                <div className= \"TodoWrapper\">                 \n                <h3 className=\"title\">To Do List</h3>     \n                        <TodoForm addTodo={addTodo} /> \n                        {todos.map((todo, index) => (\n                                todo.isEditing ? (\n                                        <EditTodoForm editTodo={editTask} task={todo} />\n                                ) : (\n                                <Todo task={todo} key={index} toggleComplete={toggleComplete} deleteTodo={deleteTodo} editTodo={editTodo}/>                          \n                                )\n                        ))}  \n                </div>\n        )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}