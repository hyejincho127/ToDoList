{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  task,\n  toggleComplete\n}) => {\n  _s();\n  const [completed, setCompleted] = useState(\"done\");\n  const completedStyle = () => {\n    console.log(\"completed\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: () => toggleComplete(task.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => toggleComplete(task.id),\n      className: `${task.completed ? 'completed' : \"\"}`,\n      children: task.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrashCan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Todo, \"6cyEM3gSAWHMho6zzMVdHxeA06s=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","FontAwesomeIcon","faPen","faTrashCan","jsxDEV","_jsxDEV","Todo","task","toggleComplete","_s","completed","setCompleted","useState","completedStyle","console","log","className","children","type","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo.js"],"sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons'\n\nconst Todo = ({task, toggleComplete}) => {\n\n    const [completed, setCompleted] = useState(\"done\");\n\n    const completedStyle = () => {\n        console.log(\"completed\")\n        \n    }\n\n    return (\n        <div className=\"Todo\">\n                <input type=\"checkbox\" onClick={() => toggleComplete(task.id)}  />\n                <p onClick={() => toggleComplete(task.id)} className={`${task.completed ? 'completed' : \"\"}`}>{task.task}</p> \n                <div>\n                    <button type=\"button\"><FontAwesomeIcon icon={faPen} /></button>\n                    <button type=\"button\"><FontAwesomeIcon icon={faTrashCan} /></button>                           \n                </div>                    \n        </div>\n    )\n}\n\nexport default Todo"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,KAAK,EAAEC,UAAU,QAAQ,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAErC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,MAAM,CAAC;EAElD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAE5B,CAAC;EAED,oBACIV,OAAA;IAAKW,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACbZ,OAAA;MAAOa,IAAI,EAAC,UAAU;MAACC,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAACD,IAAI,CAACa,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClEnB,OAAA;MAAGc,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAACD,IAAI,CAACa,EAAE,CAAE;MAACJ,SAAS,EAAG,GAAET,IAAI,CAACG,SAAS,GAAG,WAAW,GAAG,EAAG,EAAE;MAAAO,QAAA,EAAEV,IAAI,CAACA;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7GnB,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAQa,IAAI,EAAC,QAAQ;QAAAD,QAAA,eAACZ,OAAA,CAACJ,eAAe;UAACwB,IAAI,EAAEvB;QAAM;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/DnB,OAAA;QAAQa,IAAI,EAAC,QAAQ;QAAAD,QAAA,eAACZ,OAAA,CAACJ,eAAe;UAACwB,IAAI,EAAEtB;QAAW;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAAf,EAAA,CAnBKH,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAqBV,eAAeA,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}