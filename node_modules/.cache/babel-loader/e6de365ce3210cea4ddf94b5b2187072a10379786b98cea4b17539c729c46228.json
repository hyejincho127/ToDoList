{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { EditTodoForm } from './EditTodoForm';\nimport { TaskModal } from '../TaskModal';\nimport { App } from '..App';\n// uuidv4();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = todo => {\n    setTodos([...todos, {\n      id: todos.length + 1,\n      task: todo,\n      completed: false,\n      isEditing: false\n    }]);\n    // console.log(todos)\n\n    if (todos.length > 7) {\n      setTodos([...todos]);\n    }\n  };\n  // uuidv4()     \n\n  // useEffect(() => {\n  //         console.log(todos); // 상태 업데이트 이후에 todos 상태를 로깅\n  // }, [todos]); \n\n  useEffect(() => {\n    // Fetch todos based on selectedCategoryId\n    const fetchedTodos = fetchTodos(selectedCategoryId);\n    setTodos(fetchedTodos);\n  }, [selectedCategoryId]);\n  const fetchTodos = async categoryId => {\n    try {\n      // 서버로부터 데이터를 가져오는 API 요청을 보냅니다.\n      const response = await fetch(`/api/todos?categoryId=${categoryId}`);\n\n      // 응답 데이터를 JSON 형식으로 파싱합니다.\n      const data = await response.json();\n\n      // 응답 데이터에서 todos 배열을 반환합니다.\n      return data.todos;\n    } catch (error) {\n      // 에러가 발생한 경우 에러를 콘솔에 출력하고 빈 배열을 반환합니다.\n      console.error('Error fetching todos:', error);\n      return [];\n    }\n  };\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n    console.log(\"Completed!\");\n  };\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this), todos.map((todo, index) => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      editTodo: editTask,\n      task: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(Todo, {\n      task: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 17\n  }, this);\n};\n_s(TodoWrapper, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","Todo","TodoForm","EditTodoForm","TaskModal","App","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","addTodo","todo","id","length","task","completed","isEditing","fetchedTodos","fetchTodos","selectedCategoryId","categoryId","response","fetch","data","json","error","console","toggleComplete","map","log","editTodo","deleteTodo","filter","editTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Todo } from './Todo'\nimport { TodoForm } from './TodoForm'\nimport { EditTodoForm } from './EditTodoForm'\nimport { TaskModal } from '../TaskModal'\nimport { App } from '..App'\n// uuidv4();\n\nexport const TodoWrapper = () => {\n                const [todos, setTodos] = useState([])\n                const addTodo = todo => {\n                        setTodos([...todos, {id: todos.length+1, task: todo, completed: false, isEditing: false}])\n                        // console.log(todos)\n\n                        if(todos.length > 7) {\n                                setTodos([...todos])\n                        }\n                }\n// uuidv4()     \n\n                // useEffect(() => {\n                //         console.log(todos); // 상태 업데이트 이후에 todos 상태를 로깅\n                // }, [todos]); \n\n                useEffect(() => {\n                        // Fetch todos based on selectedCategoryId\n                        const fetchedTodos = fetchTodos(selectedCategoryId);\n                        setTodos(fetchedTodos);\n                }, [selectedCategoryId]);\n                \n\n                const fetchTodos = async (categoryId) => {\n                        try {\n                          // 서버로부터 데이터를 가져오는 API 요청을 보냅니다.\n                          const response = await fetch(`/api/todos?categoryId=${categoryId}`);\n                      \n                          // 응답 데이터를 JSON 형식으로 파싱합니다.\n                          const data = await response.json();\n                      \n                          // 응답 데이터에서 todos 배열을 반환합니다.\n                          return data.todos;\n                        } catch (error) {\n                          // 에러가 발생한 경우 에러를 콘솔에 출력하고 빈 배열을 반환합니다.\n                          console.error('Error fetching todos:', error);\n                          return [];\n                        }\n                      };\n                      \n\n                const toggleComplete = id => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, completed: !todo.completed} : todo))\n                        console.log(\"Completed!\")\n                }\n                const editTodo = id => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, isEditing: !todo.isEditing} : todo))\n                }\n                const deleteTodo = id => {\n                        setTodos(todos.filter(todo => todo.id !== id))\n                }\n\n                const editTask = (task, id) => {\n                        setTodos(todos.map(todo => todo.id === id ? {...todo, task, isEditing: !todo.isEditing} : todo))\n                }\n        return (\n                <div className= \"TodoWrapper\">                 \n                <h3 className=\"title\">To Do List</h3>     \n                        <TodoForm addTodo={addTodo} /> \n                        {todos.map((todo, index) => (\n                                todo.isEditing ? (\n                                        <EditTodoForm editTodo={editTask} task={todo} />\n                                ) : (\n                                <Todo task={todo} key={index} toggleComplete={toggleComplete} deleteTodo={deleteTodo} editTodo={editTodo}/>                          \n                                )\n                        ))}  \n                </div>\n        )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}