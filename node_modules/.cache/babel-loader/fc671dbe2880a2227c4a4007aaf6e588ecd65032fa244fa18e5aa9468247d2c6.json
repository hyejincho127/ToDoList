{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport React from 'react';\nimport './styles/App.css';\nimport { Today } from './components/Today';\nimport Search from './components/Search';\nimport User from './components/User/User';\nimport UserModal from './components/User/UserModal';\nimport { CategoryWrapper } from './components/Category/CategoryWrapper';\nimport { TodoWrapper } from './components/Todo/TodoWrapper';\nimport { TaskModal } from './components/TaskModal';\nimport { Category } from './components/Category/Category';\nimport { Footer } from './components/Footer';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCategoryId, setSelectedCategoryId] = useState(null);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header\",\n        children: [/*#__PURE__*/_jsxDEV(Today, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"Category\",\n          children: /*#__PURE__*/_jsxDEV(CategoryWrapper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"Todo\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/category/:categoryId\",\n              element: /*#__PURE__*/_jsxDEV(TodoWrapper, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"Footer\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bVdoYxvOV87rAdCPJtwevRqjQSA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Today","Search","User","UserModal","CategoryWrapper","TodoWrapper","TaskModal","Category","Footer","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","App","_s","selectedCategoryId","setSelectedCategoryId","useState","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport React from 'react';\nimport './styles/App.css';\nimport { Today } from './components/Today';\nimport Search from './components/Search';\nimport User from './components/User/User';\nimport UserModal from './components/User/UserModal';\nimport { CategoryWrapper } from './components/Category/CategoryWrapper';\nimport { TodoWrapper } from './components/Todo/TodoWrapper';\nimport { TaskModal } from './components/TaskModal';\nimport { Category } from './components/Category/Category';\nimport { Footer } from './components/Footer';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nfunction App() {\n    const [selectedCategoryId, setSelectedCategoryId] = useState(null);\n  return (\n    <BrowserRouter>\n      <div className=\"Container\">\n        <div className=\"Header\">\n          <Today />\n          <Search />\n          <User />\n          <UserModal />\n        </div>  \n        <main>\n          <section className=\"Category\">\n            <CategoryWrapper />\n          </section>\n          <section className=\"Todo\">          \n          <Routes>\n            <Route path=\"/category/:categoryId\" element={<TodoWrapper />} />\n              {/* <TaskModal /> */}\n          </Routes>\n          </section>\n        </main>\n        <footer className=\"Footer\">\n          <Footer />\n        </footer>\n      </div>   \n    </BrowserRouter>   \n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}