{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [task, setTask] = useState(\"\");\nconst handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await axios.post('http://localhost:3001/tasks', {\n      task\n    });\n    console.log('New task added:', response.data);\n    addTodo(task);\n    setTask(\"\");\n  } catch (error) {\n    console.log('Error adding task:', error);\n  }\n  // console.log(value)\n};\nexport const TodoForm = ({\n  addTodo\n}) => {\n  _s();\n  const [task, setTask] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (task) {\n      addTodo(task);\n    }\n    setTask('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"TodoForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"task-input\",\n      value: task,\n      placeholder: \"What is your task today?\",\n      required: true,\n      autoFocus: true,\n      maxLength: \"25\",\n      onChange: e => setTask(e.target.value)\n      // console.log(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-btn\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPlus,\n        style: {\n          color: \"#ffffff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"cJE39Iugkv77Am2GUaY068Dantw=\");\n_c = TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","axios","FontAwesomeIcon","faPlus","jsxDEV","_jsxDEV","task","setTask","handleSubmit","e","preventDefault","response","post","console","log","data","addTodo","error","TodoForm","_s","className","onSubmit","children","type","value","placeholder","required","autoFocus","maxLength","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","icon","style","color","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst [task, setTask] = useState(\"\")\n    \nconst handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n        const response = await axios.post('http://localhost:3001/tasks',{ task });\n        console.log('New task added:', response.data);\n        addTodo(task);   \n        setTask(\"\")                 \n    } catch (error) {\n        console.log('Error adding task:', error);\n    }\n    // console.log(value)\n}\nexport const TodoForm = ({addTodo}) => {\n    const [task, setTask] = useState('');\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(task) {\n            addTodo(task);\n        }\n        setTask('');\n    }\n\n    return (\n        <form className=\"TodoForm\" onSubmit={handleSubmit}>\n            <input type=\"text\" className=\"task-input\" value={task} placeholder=\"What is your task today?\" required autoFocus maxLength=\"25\" onChange={\n                (e) => setTask(e.target.value)\n                // console.log(e.target.value)\n            } \n            />\n        <button type=\"submit\" className=\"todo-btn\"><FontAwesomeIcon icon={faPlus} style={{color: \"#ffffff\"}} /></button>           \n        </form>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;AAEpC,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,6BAA6B,EAAC;MAAEN;IAAK,CAAC,CAAC;IACzEO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC7CC,OAAO,CAACV,IAAI,CAAC;IACbC,OAAO,CAAC,EAAE,CAAC;EACf,CAAC,CAAC,OAAOU,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEG,KAAK,CAAC;EAC5C;EACA;AACJ,CAAC;AACD,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAACF;AAAO,CAAC,KAAK;EAAAG,EAAA;EACnC,MAAM,CAACb,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAGJ,IAAI,EAAE;MACLU,OAAO,CAACV,IAAI,CAAC;IACjB;IACAC,OAAO,CAAC,EAAE,CAAC;EACf,CAAC;EAED,oBACIF,OAAA;IAAMe,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBAC9CjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACH,SAAS,EAAC,YAAY;MAACI,KAAK,EAAElB,IAAK;MAACmB,WAAW,EAAC,0BAA0B;MAACC,QAAQ;MAACC,SAAS;MAACC,SAAS,EAAC,IAAI;MAACC,QAAQ,EACnIpB,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACqB,MAAM,CAACN,KAAK;MAC7B;IACH;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACN7B,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,UAAU;MAAAE,QAAA,eAACjB,OAAA,CAACH,eAAe;QAACiC,IAAI,EAAEhC,MAAO;QAACiC,KAAK,EAAE;UAACC,KAAK,EAAE;QAAS;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1G,CAAC;AAEf,CAAC;AAAAf,EAAA,CAtBYD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}