{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/TaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage, faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AddImage from './AddImage';\nimport { TodoForm } from './Todo/TodoForm';\n// const addNote = (noteContent) => {\n//     console.log(noteContent);\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskModal = () => {\n  _s();\n  const [dueDate, setDueDate] = useState(new Date());\n  const [note, setNote] = useState(\"\");\n  // const [todos, setTodos] = useState([])\n  // const addNote = note => {\n  //     setNote([...note])\n  //     console.log(note);\n  // }\n  // const [image, setImage] = useState(null);\n\n  const handleSubmit = async (dueDate, note) => {\n    // e.preventDefault();\n\n    try {\n      const data = {\n        dueDate: dueDate,\n        note: note\n      };\n      // const formData = new FormData();\n      // formData.append('image', image);\n      // formData.append('dueDate', dueDate);\n      // formData.append('note', note);\n\n      const response = await axios.post('http://localhost:3001/tasks', data, {\n        headers: {\n          'Content-Type': 'application/data'\n        }\n      });\n      setTodos([...todos, {\n        dueDate,\n        note,\n        ...response.data\n      }]);\n\n      // console.log(formData)\n      // handleAddTodo({\n      //     dueDate,\n      //     note,\n      //     // image,\n      //     ...response.data\n      // });\n\n      // handleClose();\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  // console.log(note);\n\n  // addNote(note);\n\n  // setNote(\"\")\n\n  const fileInputRef = /*#__PURE__*/React.createRef();\n  // const fileUploadHandler = (event) => {\n  //     // event.preventDefault();\n  //     const reader = new FileReader();\n  //     const file = event.target.files[0]; \n  //     // // // 파일이 이미지인지 확인\n  //     // // if (file) {\n  //     // //     reader.onloadend = () => {\n  //     // //         this.setState({\n  //     // //             file : file,\n  //     // //             previewURL : reader.result\n  //     // //         });\n\n  //     // //         this.props.handleImageUpload(reader.result);\n  //     // //     }    \n  //     //     reader.readAsDataURL(file);\n\n  // const linkURL = () => {\n\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskModalContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"task-note\",\n      placeholder: \"Add some extra notes here...\",\n      autoFocus: true,\n      value: note,\n      onChange: e => setNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Due Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"due-date\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: dueDate,\n        onChange: date => setDueDate(date),\n        className: \"datePicker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"create-btn\",\n      onClick: handleSubmit,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 13\n  }, this);\n};\n\n// export default TaskModal\n_s(TaskModal, \"q9s3W7jlTXERZyUMml+4PltK5zU=\");\n_c = TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","axios","Component","FontAwesomeIcon","faImage","faCalendar","DatePicker","AddImage","TodoForm","jsxDEV","_jsxDEV","TaskModal","_s","dueDate","setDueDate","Date","note","setNote","handleSubmit","data","response","post","headers","setTodos","todos","error","console","fileInputRef","createRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","autoFocus","value","onChange","e","target","selected","date","type","onClick","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/TaskModal.js"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios' \nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage, faCalendar } from '@fortawesome/free-solid-svg-icons'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport AddImage from './AddImage'\nimport { TodoForm } from './Todo/TodoForm'\n// const addNote = (noteContent) => {\n//     console.log(noteContent);\n// };\n\nexport const TaskModal = () => {\n    const [dueDate, setDueDate] = useState(new Date());   \n    const [note, setNote] = useState(\"\")\n    // const [todos, setTodos] = useState([])\n    // const addNote = note => {\n    //     setNote([...note])\n    //     console.log(note);\n    // }\n    // const [image, setImage] = useState(null);\n\n\n    const handleSubmit = async (dueDate, note) => {\n        // e.preventDefault();\n\n        try {\n            const data = {\n                dueDate: dueDate,\n                note: note\n            };\n            // const formData = new FormData();\n            // formData.append('image', image);\n            // formData.append('dueDate', dueDate);\n            // formData.append('note', note);\n\n            const response = await axios.post('http://localhost:3001/tasks', data, {\n                headers: {\n                    'Content-Type': 'application/data'\n                }\n            });\n\n            setTodos([\n                ...todos,\n                {\n                    dueDate,\n                    note,\n                    ...response.data\n                }\n            ]);            \n\n            // console.log(formData)\n            // handleAddTodo({\n            //     dueDate,\n            //     note,\n            //     // image,\n            //     ...response.data\n            // });\n\n            // handleClose();\n        } catch (error) {\n            console.error('Error creating task:', error);\n        }\n    };\n        // console.log(note);\n\n        // addNote(note);\n\n        // setNote(\"\")\n\n    const fileInputRef = React.createRef();     \n    // const fileUploadHandler = (event) => {\n    //     // event.preventDefault();\n    //     const reader = new FileReader();\n    //     const file = event.target.files[0]; \n    //     // // // 파일이 이미지인지 확인\n    //     // // if (file) {\n    //     // //     reader.onloadend = () => {\n    //     // //         this.setState({\n    //     // //             file : file,\n    //     // //             previewURL : reader.result\n    //     // //         });\n\n    //     // //         this.props.handleImageUpload(reader.result);\n    //     // //     }    \n    //     //     reader.readAsDataURL(file);\n\n        // const linkURL = () => {\n\n        // }\n        return (\n            <div className=\"TaskModalContainer\">\n                <h3>Create a New Task</h3>\n                {/* <TodoForm onSubmit={handleSubmit} /> */}\n                <textarea className=\"task-note\" placeholder=\"Add some extra notes here...\" autoFocus value={note} onChange={(e)=> setNote(e.target.value)}></textarea>\n                {/* console.log(e.target.value) */}\n                {/* <AddImage onSelectedImage={setImage} /> */}\n                {/* <button type=\"button\" className=\"add_img_btn\"><FontAwesomeIcon icon={faImage} /></button> */}\n                {/* <input type=\"file\" accept=\"image/jpg,image/png,image/jpeg\" name=\"profile_img\" onChange={this.fileUploadHandler} onClick={this.fileUploadHandler} className=\"profile\" ref={this.fileInputRef} style={{ display: 'none'}} ></input>  */}\n                <p>Add Due Date</p>\n                <div className=\"due-date\">       \n                    <DatePicker selected={dueDate} onChange={(date) => setDueDate(date)} className=\"datePicker\" /> \n                    {/* <FontAwesomeIcon icon={faCalendar} className=\"calender-btn\"/> */}\n                </div>\n                {/* <input type=\"input\">url</input> */}\n                <button type=\"submit\" className=\"create-btn\" onClick={handleSubmit}>Create Task</button>\n                {/* {()=>console.log(\"Submit!\")} */}\n            </div>\n        )\n    }\n\n\n\n// export default TaskModal"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}