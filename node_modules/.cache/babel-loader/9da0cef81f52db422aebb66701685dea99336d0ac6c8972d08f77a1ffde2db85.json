{"ast":null,"code":"var _jsxFileName = \"/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Todo } from './Todo';\nimport { TodoForm } from './TodoForm';\nimport { EditTodoForm } from './EditTodoForm';\nimport { TaskModal } from '../TaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = async todo => {\n    try {\n      const response = await axios.post('http://localhost:3001/tasks', {\n        task: todo,\n        completed: false,\n        isEditing: false\n      });\n      setTodos([...todos, response.data]);\n      // console.log(todos)\n      // {id: todos.length+1, task: todo, completed: false, isEditing: false}]\n      if (todos.length > 7) {\n        return;\n        // setTodos([...todos])\n      }\n      console.log('New task added:', response.data);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      // 서버에 DELETE 요청 보내어 해당 id의 Todo 삭제\n      await axios.delete(`http://localhost:3001/tasks/${id}`);\n\n      // 현재 Todo 목록에서 삭제된 항목을 제외하고 새로운 목록 생성\n      const updatedTodos = todos.filter(todo => todo.id !== id);\n      setTodos(updatedTodos);\n      console.log('Task deleted:', id);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const toggleComplete = async id => {\n    try {\n      const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        completed: !updatedTodo.completed\n      };\n\n      // 서버에 PATCH 요청 보내어 해당 id의 Todo의 complete 상태 업데이트\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n\n      // 현재 Todo 목록에서 해당 id의 Todo를 찾아서 complete 상태를 업데이트하고 새로운 목록 생성\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n      setTodos(updatedTodos);\n      console.log(\"Task complete status updated:\", id);\n    } catch (error) {\n      console.error('Error updating task complete status:', error);\n    }\n  };\n  const editTodo = async id => {\n    try {\n      const updatedTodo = todos.find(todo => todo.id === id);\n      const updatedData = {\n        isEditing: !updatedTodo.isEditing\n      };\n\n      // 서버에 PATCH 요청 보내어 해당 id의 Todo의 isEditing 상태 업데이트\n      await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n      set;\n      console.log(\"Task editing status updated:\", id);\n    } catch (error) {\n      console.error('Error updating task editing status:', error);\n    }\n  };\n  useEffect(() => {\n    console.log(todos); // 상태 업데이트 이후에 todos 상태를 로깅\n  }, [todos]);\n\n  // const toggleComplete = id => {\n  //         setTodos(todos.map(todo => todo.id === id ? {...todo, completed: !todo.completed} : todo))\n  //         console.log(\"Completed!\")\n  // }\n  // const editTodo = id => {\n  //         setTodos(todos.map(todo => todo.id === id ? {...todo, isEditing: !todo.isEditing} : todo))\n  // }\n  // const deleteTodo = id => {\n  //         setTodos(todos.filter(todo => todo.id !== id))\n  // }\n\n  // const handleDelete = async (id) => {\n  //         try {\n  //                 const response = await axios.delete(`http://localhost:3001/tasks/${id}`);\n  //                 console.log('Task deleted:', response.data); \n  //         } catch (error) {\n  //                 console.error('Error deleting task:', error);\n  //         }\n  // }\n\n  // const editTask = (task, id) => {\n  //         setTodos(todos.map(todo => todo.id === id ? {...todo, task, isEditing: !todo.isEditing} : todo))\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }, this), todos.map((todo, index) => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      editTodo: editTodo,\n      task: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(Todo, {\n      task: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 17\n  }, this);\n};\n_s(TodoWrapper, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","axios","Todo","TodoForm","EditTodoForm","TaskModal","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","addTodo","todo","response","post","task","completed","isEditing","data","length","console","log","error","deleteTodo","id","delete","updatedTodos","filter","toggleComplete","updatedTodo","find","updatedData","patch","map","editTodo","set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/hyejincho/Developer/Projects/ToDoList/src/components/Todo/TodoWrapper.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { Todo } from './Todo'\nimport { TodoForm } from './TodoForm'\nimport { EditTodoForm } from './EditTodoForm'\nimport { TaskModal } from '../TaskModal'\n\nexport const TodoWrapper = () => {\n                const [todos, setTodos] = useState([]);\n\n                const addTodo = async todo => {\n                try {\n                        const response = await axios.post('http://localhost:3001/tasks', {\n                                task: todo,\n                                completed: false,\n                                isEditing: false\n                        });\n\n                        setTodos([...todos, response.data]);\n                        // console.log(todos)\n                        // {id: todos.length+1, task: todo, completed: false, isEditing: false}]\n                        if(todos.length > 7) {\n                                return;\n                                // setTodos([...todos])\n                        }\n                        console.log('New task added:', response.data);\n                } catch (error) {\n                        console.error('Error adding task:', error);\n                }\n        }   \n\n                const deleteTodo = async id => {\n                        try {\n                        // 서버에 DELETE 요청 보내어 해당 id의 Todo 삭제\n                        await axios.delete(`http://localhost:3001/tasks/${id}`);\n                \n                        // 현재 Todo 목록에서 삭제된 항목을 제외하고 새로운 목록 생성\n                        const updatedTodos = todos.filter(todo => todo.id !== id);\n                        setTodos(updatedTodos);\n                        \n                        console.log('Task deleted:', id);\n                        } catch (error) {\n                        console.error('Error deleting task:', error);\n                        }\n                }\n\n                const toggleComplete = async id => {\n                        try {\n                                const updatedTodo = todos.find(todo => todo.id === id);\n                                const updatedData = { completed: !updatedTodo.completed };\n\n                            // 서버에 PATCH 요청 보내어 해당 id의 Todo의 complete 상태 업데이트\n                                await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n                \n                            // 현재 Todo 목록에서 해당 id의 Todo를 찾아서 complete 상태를 업데이트하고 새로운 목록 생성\n                                const updatedTodos = todos.map(todo =>\n                                todo.id === id ? { ...todo, completed: !todo.completed } : todo\n                                );\n                                setTodos(updatedTodos);\n                        \n                                console.log(\"Task complete status updated:\", id);\n                        } catch (error) {\n                                console.error('Error updating task complete status:', error);\n                        }\n                }\n                \n                const editTodo = async id => {\n                        try {\n                                const updatedTodo = todos.find(todo => todo.id === id);\n                                const updatedData = { isEditing: !updatedTodo.isEditing };\n                \n                            // 서버에 PATCH 요청 보내어 해당 id의 Todo의 isEditing 상태 업데이트\n                                await axios.patch(`http://localhost:3001/tasks/${id}`, updatedData);\n                \nset\n\n                                console.log(\"Task editing status updated:\", id);\n                        } catch (error) {\n                                console.error('Error updating task editing status:', error);\n                        }\n                        }\n\n                useEffect(() => {\n                        console.log(todos); // 상태 업데이트 이후에 todos 상태를 로깅\n                }, [todos]); \n                \n                // const toggleComplete = id => {\n                //         setTodos(todos.map(todo => todo.id === id ? {...todo, completed: !todo.completed} : todo))\n                //         console.log(\"Completed!\")\n                // }\n                // const editTodo = id => {\n                //         setTodos(todos.map(todo => todo.id === id ? {...todo, isEditing: !todo.isEditing} : todo))\n                // }\n                // const deleteTodo = id => {\n                //         setTodos(todos.filter(todo => todo.id !== id))\n                // }\n\n                \n                // const handleDelete = async (id) => {\n                //         try {\n                //                 const response = await axios.delete(`http://localhost:3001/tasks/${id}`);\n                //                 console.log('Task deleted:', response.data); \n                //         } catch (error) {\n                //                 console.error('Error deleting task:', error);\n                //         }\n                // }\n                \n                // const editTask = (task, id) => {\n                //         setTodos(todos.map(todo => todo.id === id ? {...todo, task, isEditing: !todo.isEditing} : todo))\n                // }\n        return (\n                <div className= \"TodoWrapper\">                 \n                <h3 className=\"title\">To Do List</h3>     \n                        <TodoForm addTodo={addTodo} /> \n                        {todos.map((todo, index) => (\n                                todo.isEditing ? (\n                                        <EditTodoForm editTodo={editTodo} task={todo} />\n                                ) : (\n                                <Todo task={todo} key={index} toggleComplete={toggleComplete} deleteTodo={deleteTodo} editTodo={editTodo}/>                          \n                                )\n                        ))}  \n                </div>\n        )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}